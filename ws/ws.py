import base64, codecs
magic = 'uflnlzQBXCTziopvGAQqDRxXOfNYrrzPqOPfeKgrOYjTYCsByhBIlBhAraphBySUzQhTaXcHoETXlOz262 = 357
r260 = "FMgBUVAVMZyiTNNuDMBrXiDHGzVfhBHLPlqyXIPWmNeNYQWDnRxCzSwVxfqZHKcXzqwXSIgrOsSAKsy"
I258 = "EECYisGFcjLjNYIsQKrRyslZZlvedLFgrrzaTPtBNcYZhQxClJggpGBdtVzZDIeHsFjTbpVgTnUSRkl"
a16364814864178584256 = "YoDFbgaOCNhgMqZLYmKmedTdPcvCMxRYjSOngciGYChIIqnAxpRdzapjOylFFSjccIziGoKDKhQyXtN"
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv = 410
Z1636481486417344252 = 203
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq = "xBlIDhYJbzlxstyCRedIoFBrIlzzltjGqsjhGVywLqeKcVoLzHQehpANdweRJqnoOwmckdCKFBBdXVb"
SihDVrPPkINsOfwjoCrWaVYTEtPDCspyDFEWlXSUIcHczrIJVjAVKMWYtiIDPqQXXtBNphGzyOBOSQy248 = "NCadTcpusZAhZbuHxgvWVrJbszAMGxOltwymodqxYSbiezhXoNkeNQOnVNuzQVYDEkwefKjNEGJNYqE"
HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH = 116
p244 = 554
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq = "jDsJthIsJIEbsqbGNwRPmcZNsJOEVceOHbxlQRFIQfRKNxpOEWOiAkHZsJqBXHOQeUPgvvNQjHifnjv"
bhGaFDnbPbzoCClwpzPCZWXcqQTlEjObXpUFruSxApNMaugUfXGRrhOoxdAeAHGhDcdIhZVyRNnKota240 = "DGQtEhgBFFIWhITARSFCELLtAiPQNNSPgqgMqTfodlgsNqckgORTETmqsqsuXerUiYnEnNGstHYWqEi"
DNOCiDJiZmDmDGXzZFJvxwAfYyzknsYyrDWCoUlKOIHyrGeZLQRnxcWrotoZibtGmJXRpusztnImgaB238 = 300
aAAaAAAaAaAAaAaaAAAaaaAaaaAaaaAaAAAaAAAAAaaaaaAAAAAAAAAAaAaAaaAAAAAAAaAaAAaaAAAAaAAaaaaAaaAaaAAaAAAAaAAaAAAaaAaAAAAAaaaAAaaAAaAaaaaaAAaaAaaAaAAaaAaAAAaaAaaAaAaaAAaaAAaaAAAAAAAaAaaaAAAAAaAAAaAaAaAaaAaAAAaAAAaAaAAaaAAaaaaAaAaAAAaaAaaaaAAa = "aFpGEUZMUMIGzLFBvnszIRqUsVpHLYvZTdXucXeBkxwJgzVVrINYoqoIIZisdrAFlUxbcCERQzJCgIZ"
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN = 458
llllllIllIIlIIlIlllIlIIIllIllIllllIIIllIlllllllllllllIllIIIIlIlIIlIllIIlllIlIllIlIIIIIIIlIllllllIIIIllIlIllllllIllllllllIIIIlIIllIlIIlllIIllIIIIllllIlllllIIllIlIIIlIIIlIIIllIIIllIIlIlIlllIllIlIlllIIIIlIIllIIlIllIIlIIIlIllIIlIIllIIIl = 852
y16364814864149945230 = 632
kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = 417
aAaAAaAaaaAaaAaaaAAAaaaaAAaAaAaAAAAaaaaAAAaAaaAAAaAaaAaAaAAAAaaaaaaaAaAAaaAaaAAAAAaaAaAaaAaAAAAAaAaaAAAAAaaAAAAaAAaAaAAaaAaAAaaaAaaaAAAaAaAaAaaaAAAAAAaaaaaAaAaaaAAaaaaAaAaAaaAaaaaaaAAAaaaAaaAAaaaAAAaaAAaAAaAAaaAaAAAAAAAaAaaaaA = 540
IIIlIIlIlIllIIIIllllIlIlIlIIlIlllllIIIlIlllIIlIIIlIIlIIlIIIlIIIlIIIllIlIIIIlIlIIIIllIIIllIIlIIIIlIllIIIlIlIlIlllllIlIlllIIIlIllIlllIlllIlIllIlIIlllIIlIIlIIIlIIlllIIlIIllllIIlIllIllIIIIlllIlIllIlIIllllIIlIIIllIIllIIlIlllIllII = "kQnuUkBaJuxaUywBgucPHXiQZQohCwTrSZinaWkgKNPZPtQwPsnnqTikTgBRolncNSazMmLkIFLCCWL"
fdHyhNpWjqwlIqvzEDZjhjHJmpCoubJxHLHaqcnBACrvkvYKSIhovtNPlVBrEoSOvJVkhJIqswnFVCm222 = "TiPVsqufhetNGHYrRtvkkCsPwaPVLqGdlKkmAjkjAiVuNHxjwLpFMZlLXrNprWpDDSGKGQEgaOBKlfy"
hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh = "ZEJeBdmOMJYrjDqqOlrVgIQmEvBWqrQmftejQCbRToIbzyBuBSadnlhxhAyJLexpajNdynBILegYsFz"
aAAaaAaAAaAaaAaaAAaaaAAAaAAaAaAaAAaAAAaaAaaAAaAAaaaAAaaAaaAAaaAAAAaAAAaaAaAaAaaAAAaAaAaaAaAaaaaaaaAaaAAAAaaaaAAaAaAaaaAaAaaAaAaaAaaaAaAaaAaaaaaAAAaaaAAAaAaaAaaaAAaaaaaAaAaaAaAaAAAAaAaAaAaaAAAAAaAaAAaaaAaAaAAaaaaAaAaAAA = 621
K16364814864136658216 = "SxfLBolepSHFdiDbCFqwGPFOqpewiOlTNlnKlGvxlnGloYyJOvaqfHyISdnhmyJvLyTYrkqbVUaVHOT"
aAAaAAaAaaAaAAAaaaAaaaaAaAaaaAaAaaaAAaAAaaaaaaaaaAaAaAaaaaaAaaAAaaaaAAAaAAAaaaAAAaAAaaaAaaaAaAAaAaAAAaaAaaAAaAaaaAaAAAaAaAaAAaAAaaaAaAaaAAaaaaAaaaAAaAaaaaAAAaaAaaaAaaAAaaAAAaAAaaAaaAAaaaaaAAAAaAAAaAAaaAaaaaaAAAAAaA = "DEBXNwZCBDYFpKMVZYHorMEoRVqScwPLBmmTOazWaJgGOfdwNbpXOcFGoacZLCukzIhmaiMFuqjRcqZ"
aaAaaaaAAAAaAAaaAaAaaaAaAaaAAAAaAAAAaAaAAAaAaAaAAAaAAaaaaaAaAaAaaaaaAaAAaAAAaAAaaAaAAaaaAaaaaaAAAAAaAaaaaAAaAaAAAaAAAaAAaaAAAaAAaaaAaaAAaAAAaAaaaAAAAaAAaaaaAAAaaAaAaaAaAAaAAaaaaAAAAAaaAaAAAaaAAAAAAAaAAaAAAaAaAaaA = 272
p1636481486412972210 = "BJpqCqqRKKMzJJyMsIrVSmhjHpzVkvSgJfoKPRECidRJKkgNsQZQlGkwDuNnXunWrJbFRiDhxPrggOB"
llIlIlIllIIIlIlIIlIlIIIllllllIlIlIlIIIllIlIlIllIIllllllIIIIIllIIIIlllllIIlIIlIIlIIIIlIllllIIlIlIIIIlllIIlIllllIlIIlllllIlIlllIlIllIIIlIlllllIlllIIIlllIlIlIIIlIlllIlIllIIIlIlIlIIIIlllIIIIlllIIIIIIIIIIIIllIIIll = 289
aAaAAAaaAaaaAAaAAAaaAaaaAaAAAAaaaaaaAaAaaaAaaaAAAAaaaaAAaAAaaAaAAaaAaAAaAaAAAAaaAaaaAaAAaaaaAaAAAAaaaaaaaAaaaaAAaAAaaAAAaAAaAAaAaAAAaAAAAAAAaaAaAAaaaaaAaAaaAAAaaAAAaAaAaaAaaAaAaaaaAaaAAAAAaAaAAaaAAAaaaAAAaA = "wixIlNRVngmLXzASQFePRkeVANffJWcoGwlbyJphNiGPGUCRbGkyxXYnuvCBqAAVlUfbaqRNhKkDLEh"
hSkfFoRHWrVhogejfLKKDqxFHGrmloUHxbVKmwQoSJNpfCcmcohZlgUZuFyxRaCggDZroMeRrdeeLTc204 = 337
aAAAaaaAAaaAaAAaaAAAAaaaAAAAAaAAAaAaaAaAAaAaaAaaAAAAAaaaAaaaaAaaaAaAAAAAaAAAaAaAAaaaaAaAaAaAAAaAaaaAAAAaaaAaAaAaAAaaaaAaAaAaaaAAaaaAaaAAAaaAAaaaAaAaAAAaaAAaAaAAaAAAaaaAaAaaAAAAaaaAAaAAAAAAAAAAAaAAAAAaAA = 884
llIlIlIlIIIlIllllIllIIllIlIIlIllIllllIlIIlIlIllIIllllIIIIllIllIIIIIlIIIllIlIIIlllIIllIlIlIIllIlIlIlIllllIlIIlIllllllllIIIIlIllIIIIIIIIlIIllIlIlIIlIlIIIIIIlIIlIIIIllIlIIIlllllllIlllIIIlllIlIIIIlIIllIll = 144
a16364814864119127198 = "PrQngnwZyAXMDAepFSpPaGMRlXYFSskszdEeitmqnSDyoVxoVfPSVjmFxjBkRCmXvrjYCHLdapeYCTU"
a1636481486411672196 = 294
AAAaAAaaaAaaaAaAAAaAAaAAAaaAAaaaaaAAaaaAaAaAaAaaaAAAAAAaaaaAAAaaAAAAaAaAaAAaAAAAAAAaaaaAaaAaaAaaAaAAaAaAaAAAAAaAAAaaaaAAAaAaAaAAaAAaAAaaAAAaaAaAAaAAaaAAaaAAAaaAAAAAaaAAAaaAAaAAAaaaaAAaaAAAaAaaaA = "kbsoxFcrjXWhExXHJHbLCYQXyKNCPMqttavgPwkyGJXELoWjVwsIymNwWUzwqbuNWtmFYkDOdmsMSyo"
Z192 = 321
y16364814864110672190 = 353
N188 = 407
lIlIIlIIlIlIlIIlIIIIlIlIlIlIlIIllIlIIlIlIlllIlIIlIIllIIlIIlIIIIIllIllIIlIlIlIlIIIIIIllIllIlIllIIIllIIIIlIllIIIIlIIIIllIlllIIIlIIlIIIIIIIlIlIIlIIllIllIlllIIIIlIIlIIIllIIlIIIlIIlIIlllIIlIl = "JwiTtjByxUPQfwZcnzrzQYfzFoebAMnhsneDYLMQTmzabrsGkpZENPPvgKRGqEpoEzmTNgrvNJtZjvX"
WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW = 476
AaaAAAaAaaAAAAaaAaAAaaaAaaaAAAAAAAaAaaAAAAaAAAaAaaaaAaaaAAaaaAAaaaaaAAAAaAaaaaaAaaAaAAaaAAaAaAAAaaaaaAAAaAAaAAaaAaAAaaaaAaaaaaAaAAaaAAaAAAAaaAAaaAaAaAaaaAaAaaaaAAaaaAaaAaAaaaAaaaAaaa = "IrpUcpvSfshpspHGLwJuKJyUkTBhTltoJBubQmiIJRulKnUMQcJDJMNpqadFyKFJDmNcVsaurYdrrYo"
IlIlIlllIIlIlllIlIIIIIIlllllllllIIlIlIllIlIIIlIIIlIlIlIllllllIIIllllIIIlIIlIlIIIIIIIIIllIlIIIlIllIIllIlIllIIIllIlIIlIIlIIllIlllllllIIIlIIIlIIlIIIIIllIIlIIIIIlIIlIIIIllIIIIIllIlIlII = 485
IIlIlIIlIlllIIIlIllIIlIIIIIllIIIlIllllIlIIIIIllIIIlllIIlIllllIIIlllIlIIlllllIlIlIllIIIIllIIIIlIllIllllIllIlIllIlllIllIlIlIIIllIllIIlIlIlIIIIIIlIIllIIIIlllIIllIlIIIlIIIIlIIllIlIII = "fYcJEBCxegiOkpXVgmiwnTLPjGDfwNKssznTXOTkTUZdoocLJyZzuWdXTJySmvRHgjlitAsrSmgdoyS"
NmhKOYpfcwPPHHBAgGJelkMwSIxtFtGZbtaZWYpGdvfkTqtOXowAYEZsuIqjMOyhmIsziCQaxCIOrdE176 = "iwDHmrtirDTqvBzhJlbQcFfbdxFLibqlXTsmbkKoBZYlKNeAtUmjWvUSDmgyYFhTGxxnEgNjmUpsatD"
bxxASlZaLAjkgIRnJBgyaQNSoFyPIvLVMDCSkeUxUzJqtaIQtgdFiwsXKiDsaAdKePJLnmkWEaKdIsi174 = "DCegMHpLbXmkfPHyBzYbSAItwLmcJcehxIwhxmSkAZiHlsiRwthsGhgMvhsZpRICAqIEPpCiXCQTupj"
uTmOmfvAtbalqDzackwnyvogOgBmtbKcdtUFqiLBumSilSJeAYgInOiNuTCzHrNEorcRIIiyIZiorhj172 = 358
dkyQZkjSwdXoClSvGfJKmZnuwLInYGWfTkKjKMkopvRqUOOWjghVmxzmOcVaVuINcNPyBvHOiYQnhRz170 = "BgVtphXDyldzYcqsIVDehfgMUiMowvSGiLiQPacOyPdAuYWvcoIWSCAsPOAfUvBKQyjMHaxjesTTWDq"
GDeqFbnCRkxyCuZxOOArIHzEwMvXeTWmFhyPqrrcxPBUzJbvhLlqYZtPofMBsafDEMePIMZzSdhFCgS168 = "GvrkCCMJTYOagFhifKdJQGbMypxnMHFrdeaXyimgWynBwsuhxwdfVqiVGoyPSVJyBysroQmDEYtxjTz"
thkuObSTXglmjdhfXqMNAjxDLYNyweTfUjnvgAjdgoRWXmYBxwcKbCycYVZzMkfEXVeXRMQNqChyObt166 = 136
lIIllIIlIIlIlIllIIlllllIlIIIIIIlIIIllllIIlIIIlIlIlIlIlllllIIIlIIIIIIIIIIlIIIIlIlIIlIlIllIIllllIIlllIIlllIllIlIIIIIIIlIllllIlIlIIIlllllIllIIIllIlllIlIlIlllllIlIIIIIl = "MZoFbWEqnzyEEpCJqYDgIOTXqMVAXoWRZnLQdcceCCOsRQSOSYDrGocPrCmgzPOUYZGHzrWXxEDgIyJ"
IIlIllllllIlIlllIllIlllIIIIIlIIIllIlllllllIlIlIllIIllIllIllIIIllIllllIlllllllIlIlIlllIIIlllIIIIIIIIlIllIIIlllllIIIIlllIlIlIIIlllIlIIIlllIIlIllIllIllIIIIIlllIIIlll = 508
aAaaaAAaAaAAAaAaaaAaAAAAaAAAaaAaaaaaAAAaAAaAAaAaAAaAaaaAaAaaaAAaaaAAaaaaaaAAaaaAAaAaAaaaaAaAaAaAAaaaaAAAAaaAaAaAAAaaAaaAAAAaAAAaAAaaaAaAAaAAAaaaAAAAaaAaaAAAAaAa = "BrLytuxuaHNhaFeIQJaiGcJZKQQrXblUNcaJuMitjlmRLHceyfSDyTiRjMzeprdFUXIiSkkIxeYygwB"
r16364814864078302158 = 223
K156 = 326
AAaaAaaAAAaaAaAaaAAaAaAaaaAAAAaAaAaAaaaaaAaaaaaaAAAAaaAaaaaaAaAaAaAAAAaAaaaAAAaAaAAaAaaAaAAAaaAaaaAaAaAAAaAaAaaaAAaAAaAaaAaAAAaAaAaaAaaaAAAaaAaaAAaaaAAAAa = "DkmlMulrJBYVdAIRLupjmQFPtAxiuiCtbNVOyjjCZTIYzIqZGnLnEaYUwLKhHKtWacoiWYKnBIYqPpM"
F16364814864073846152 = 632
z16364814864073586150 = "areDLdqdoBVsEhpODOPJAAxgDBjpxnirFDlPQvVVUGArNmVauyprhAbIzYocBCUuXyPJZMUkghRFffF"
CBeCLUfcFPTRrvpMpMBBwlereDHlADgEwagqdbCgEfzFipHatnEDjJOTXebaEPkpUUwPunGrRQxYzmV148 = 212
AaAAAAAaaAAAaAAAaAAAaaaAAAAaAAAaAAaAaaAaaaaaaaAaAAAaaAAAAaaaaAaAaaAaaAAaaaaaaaaaAaAAAAaaaAaAaAAAAAAAaAAaaaAAaaAaaaAAAaAaAAaAaAaAAAaaAaaAaaaAAaaaAa = 342
c144 = 200
YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY = 844
GkPIEZTEuqkJeeUAGpUANHzRaArXHmILCvtdSTAlqpQJNDQjFSJEAagNaExwjSaPqOAtMAPlSVtNcUW140 = "MqTjBbqHSvJaIIuHOvZfiOaeSmDIvsOyvckxhRAtWLzYKEySJVFTKLlhCUENbICrIsLCXlRAGARxpFU"
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc = "wUukcxktpGWoVMEtxKJzatcXNeeREokMznkJZXTbGfAsIstWqRbpPjFhbXLzpIVnxgvbloiPuDTsquw"
IIIIIlIIIIlIIIIIlllllIlIIIIllllIIIlIllIIlllllIllIlIIIllIlIIllIlllIIIlIIIllIlIIllllIlIlIIIlIIIllIIIIIIIIIllIllIIlIIlllIllIlllIllIlIllIlII = "qDvkDLGdqBzXvCLwoPCYYWhOuJPAWsPUQoeGhLggaRuuxwwwtlLDtzWxYjXGTRpbVlKkgpcqUjwESQy"
AaAaaAaaaAAaaAaAAAaAAAAaAAaaaAaAAaAAaaAAAAaaaaaAaaaaaAaAAAAaaaAAaaaAaaAaaaaAaAaaaaAAAaAaAAaaaAaAAAAaaAaAaaAaaAaAaAAaAAaAaaaAAaAAaAaaaa = "ATiXbfYjZvmuaKRwMqChbykMerGUgUpRwWTXGvkzdPixgMQHmcBMbboVHFugTxhkVFGHzOWbGwgNfrd"
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG = 356
DMeexNPTtHqoArKLyLcePhigaKjCGKkAFEOcmqeKklxsTuuRasPvuYagsTQnoeDcVjeClcDJcLXtGhn130 = "AFlJxtfwFGfbCexRDKXMJoUNolsChOgacCiaQzKHipEzAiXPfZXnXidphsjVIUISGkDBvMYqynbUAHl"
pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp = 510
DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD = "rhFNLQtqfuUbstNOfXupGNAJqHGuVSITurhLUDuQMKJCsOdYWaiAsAUUzDxTDhjFxgDKBqMCLVOObkR"
lIIllIIllllllIlllIlIllIlIlllllIlIlllIIIllIllIIlIlIIIlllIllllIlIIlllIIlIl'
love = ''
god = 'body').send_keys (Keys .COMMAND +'t')#line:69:browser.find_element_by_tag_name('body').send_keys(Keys.COMMAND + 't')
    O0000O00OO0OOOOO0 .get (URL_2 )#line:71:browser.get(URL_2)
    OO0O0O0OOOO000O00 =O0000O00OO0OOOOO0 .find_element_by_xpath ('//button[@class="ant-btn ant-btn-primary ant-btn-icon-only"]')#line:73:linkbar2 = browser.find_element_by_xpath('//button[@class="ant-btn ant-btn-primary ant-btn-icon-only"]')
    OO0O0O0OOOO000O00 .click ()#line:74:linkbar2.click()
    O0000OO000OOO00OO =O0000O00OO0OOOOO0 .find_element_by_xpath ('//input[@aria-valuenow="0"]')#line:77:linkbar4 = browser.find_element_by_xpath('//input[@aria-valuenow="0"]')
    O0000OO000OOO00OO .send_keys (Keys .CONTROL ,'a')#line:78:linkbar4.send_keys(Keys.CONTROL, 'a')
    O0000OO000OOO00OO .send_keys (Keys .BACKSPACE )#line:79:linkbar4.send_keys(Keys.BACKSPACE)
    O0000OO000OOO00OO .send_keys (O0OO0O0OOOO000O0O .args )#line:80:linkbar4.send_keys(context.args)
    O0O0O0O000000OO0O =O0000O00OO0OOOOO0 .find_element_by_xpath ("//input[@class='ant-calendar-picker-input ant-input']")#line:82:dataer = browser.find_element_by_xpath("//input[@class='ant-calendar-picker-input ant-input']")
    O0O0O0O000000OO0O .click ()#line:83:dataer.click()
    time .sleep (1 )#line:84:time.sleep(1)
    from datetime import datetime #line:86:from datetime import datetime
    from datetime import timedelta #line:87:from datetime import timedelta
    from datetime import date #line:88:from datetime import date
    O00OO00O000O0O00O =date .today ()#line:89:Begindatestring = date.today()
    O0OOOO00OOO00O000 =30 #line:90:dat = 30
    OOOOO00OO0OOO0OOO =O00OO00O000O0O00O +timedelta (days =O0OOOO00OOO00O000 )#line:93:Enddate = Begindatestring + timedelta(days=dat)
    date =f'{OOOOO00OO0OOO0OOO} 15:26'#line:95:date = f'{Enddate} 15:26'
    O0000O00OO0OOOOO0 .find_element_by_xpath ("//input[@class='ant-calendar-input ']").send_keys (date )#line:96:browser.find_element_by_xpath("//input[@class='ant-calendar-input ']").send_keys(date)
    OOOO0OOOO00O00O00 =O0000O00OO0OOOOO0 .find_element_by_xpath ("//A[@class='ant-calendar-ok-btn']")#line:98:ok = browser.find_element_by_xpath("//A[@class='ant-calendar-ok-btn']")
    OOOO0OOOO00O00O00 .click ()#line:99:ok.click()
    time .sleep (1 )#line:101:time.sleep(1)
    WebDriverWait (O0000O00OO0OOOOO0 ,10 ).until (EC .element_to_be_clickable ((By .XPATH ,"(//DIV[@role='combobox'])[2]"))).click ()#line:103:WebDriverWait(browser,10).until(EC.element_to_be_clickable((By.XPATH,"(//DIV[@role='combobox'])[2]"))).click()
    WebDriverWait (O0000O00OO0OOOOO0 ,10 ).until (EC .visibility_of_element_located ((By .XPATH ,"//li[@class='ant-select-dropdown-menu-item']")))#line:105:(By.XPATH, "//li[@class='ant-select-dropdown-menu-item']")))
    WebDriverWait (O0000O00OO0OOOOO0 ,10 ).until (EC .element_to_be_clickable ((By .XPATH ,"(//li[@class='ant-select-dropdown-menu-item'])[2]"))).click ()#line:107:(By.XPATH, "(//li[@class='ant-select-dropdown-menu-item'])[2]"))).click()
    time .sleep (1 )#line:109:time.sleep(1)
    O0OOOO000O00O0OOO =O0000O00OO0OOOOO0 .find_element_by_xpath ('(//INPUT[@type="number"])[1]').get_attribute ("value")#line:112:port = browser.find_element_by_xpath('(//INPUT[@type="number"])[1]').get_attribute("value")
    OO00OOO0OOO0000O0 =O0000O00OO0OOOOO0 .find_element_by_xpath ('(//INPUT[@type="text"])[3]').get_attribute ("value")#line:113:uid = browser.find_element_by_xpath('(//INPUT[@type="text"])[3]').get_attribute("value")
    OO0O0O0O0OOOOO0O0 =O0000O00OO0OOOOO0 .find_element_by_xpath ('//INPUT[@role="spinbutton"]').get_attribute ("value")#line:114:gb =  browser.find_element_by_xpath('//INPUT[@role="spinbutton"]').get_attribute("value")
    O0OO0O0OOOO000O0O .bot .send_message (chat_id =OO0O000OO0OO00O0O .message .chat_id ,text =f"✅ SUCCESSFULLY CREATED ✅\n\n🔰Paid Privet V2RAY 🔰\n\nᗚ  Host IP • ๛`{IP}`\nᗚ  Port • ๛`{O0OOOO000O00O0OOO}`\nᗚ  Data Limit • `{OO0O0O0O0OOOOO0O0}GB`\nᗚ  Expire date • `{OOOOO00OO0OOO0OOO}`\nᗚ  UUid • ๛`{OO00OOO0OOO0000O0}`\n\n࿂  Protocol • vmess/WS\n\n[-] ═───────◇───────═\n `vmess://ew0KICAidiI6ICIyIiwNCiAgInBzIjogIiIsDQogICJhZGQiOiAiSVAiLA0KICAicG9ydCI6ICIwIiwNCiAgImlkIjogIlVVSUQiLA0KICAiYWlkIjogIjAiLA0KICAic2N5IjogImF1dG8iLA0KICAibmV0IjogIndzIiwNCiAgInR5cGUiOiAibm9uZSIsDQogICJob3N0IjogIllPVS5zbmkuSE9TVCIsDQogICJwYXRoIjogIiIsDQogICJ0bHMiOiAiIiwNCiAgInNuaSI6ICIiDQp9`\n[-] ═───────◇───────═\n›☬[•] SCRIPTS ═◇ DARKV2RAY ◇═ [•]☬ •\n\n[🧿YOU Tech🧿](https://t.me/YouTech_VPN_HUB)",parse_mode =telegram .ParseMode .MARKDOWN )#line:118:context.bot.send_message(chat_id=update.message.chat_id, text=f"✅ SUCCESSFULLY CREATED ✅\n\n🔰Paid Privet V2RAY 🔰\n\nᗚ  Host IP • ๛`{IP}`\nᗚ  Port • ๛`{port}`\nᗚ  Data Limit • `{gb}GB`\nᗚ  Expire date • `{Enddate}`\nᗚ  UUid • ๛`{uid}`\n\n࿂  Protocol • vmess/WS\n\n[-] ═───────◇───────═\n `vmess://ew0KICAidiI6ICIyIiwNCiAgInBzIjogIiIsDQogICJhZGQiOiAiSVAiLA0KICAicG9ydCI6ICIwIiwNCiAgImlkIjogIlVVSUQiLA0KICAiYWlkIjogIjAiLA0KICAic2N5IjogImF1dG8iLA0KICAibmV0IjogIndzIiwNCiAgInR5cGUiOiAibm9uZSIsDQogICJob3N0IjogIllPVS5zbmkuSE9TVCIsDQogICJwYXRoIjogIiIsDQogICJ0bHMiOiAiIiwNCiAgInNuaSI6ICIiDQp9`\n[-] ═───────◇───────═\n›☬[•] SCRIPTS ═◇ DARKV2RAY ◇═ [•]☬ •\n\n[🧿YOU Tech🧿](https://t.me/YouTech_VPN_HUB)", parse_mode=telegram.ParseMode.MARKDOWN)
    OOO0O0O00OOO0O0OO =O0000O00OO0OOOOO0 .find_element_by_xpath ('(//BUTTON[@class="ant-btn ant-btn-primary"])[1]')#line:120:linkbar7 = browser.find_element_by_xpath('(//BUTTON[@class="ant-btn ant-btn-primary"])[1]')
    OOO0O0O00OOO0O0OO .click ()#line:121:linkbar7.click()
    time .sleep (1 )#line:123:time.sleep(1)
    O0000O00OO0OOOOO0 .close ()#line:124:browser.close()
V1 = 323
T163648148639830733 = 239
j163648148639834125 = 595
zolmHjwpoOrjyfDOSAESKHaKcvcZftKrEMmHZkZhqtqvXHMYetYvSsoZevzkVSVnoGLXlRomeISlPLO7 = "qSDWaISNQWbqRptmAXsfwBtcdhYpYjsOIaedFQaLcAtxUyaOSndCMFDElneLwwCjtXLqmgBquvXveLr"
llllIlIII = "JJqLbsXFYYwGipGlyKwnxDnyMHkDhILoTvwCRSWmDBUsbmcnJpSPjImGIFhPecvereTgVRXGYApYJtJ"
UUUUUUUUUUU = 631
N1636481486398746313 = 763
Z15 = 694
FWGhYuyIlefPBlydRgPMhSomDGjRyIaubaeNJIoQcRVORqhOhDBhYYwuVflVEokXVlnABsZzyfwxvpY17 = 332
uuuuuuuuuuuuuuuuuuu = 58
aaaaaaaaaaaaaaaaaaaaa = 207
aaaaaAaAaAAAaaAAAAaAaaa = "ukcHMNtSRTsnFJwrpSKiHkprthOHENXlqUInCiZJvZZBURBkMxsJIefRJtQUieMsaSJEUQEEhimhkTX"
y25 = 545
aAaAAaaAaAAAAaAaAAAaAaAaAAA = 344
IIlIllllllIIlIIllIllllIIIllIl = "MqhApNozMNHiESbpfAcshWJcPXnItIdQsaWpBXqJODKlxSigIMSJHxNxFaQLYeoBKhdOQrVraxqMbID"
T1636481486399530431 = 552
czoKsskOJQOABdGbfMHtrgArPXgeWGytgmsQPtQHLNRiIzvDFleufPulxpeUeTTxiRlZJwqCyCSVZRy33 = "vguZYgQqOMmKYCLuEfXHPfNFzQmAsaAQONSRvEQiHfRlxnjdyCaBqMeaXXovALbLuYiFpYeFmxWwroY"
aAaaaAaaaaAAaaaAaaAAaAAaAaAaaaaaaaA = 165
lIIlIlIIlIIlllllIIllIIIIIlIIlIIlIIlIl = "WMMNQpURhqtiFJRqyepUkOLNldtNXRSpagHIcvAMwPwCkPwYnJsfGNmrckXxKWoYBlEsfIsXzhlwjVi"
ZXYPbnmTGFzkqhfasWDvUNMoJCnzwMSdEkZXrHhXNiUvEhQCGlosWPZhJWusYLDrhfDNHDwlHnpxFMz39 = 260
Q41 = 183
x1636481486400095543 = "PgGMtgsKDpcOPoZVLypSmVHoRQKyrjuTNsyRpxvRAgoRtWJhBWrIKPtOKHwUYTogvizPaWgPIyLXGNS"
PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP = 679
AaaAaaAAaAAaAAAAaaaAaAAaaAaAAAAAAAAAaaaaAAAAaAA = "vtxCHSLzAtwRWApyYxSsVxLnSuAvNjhXnzkNYwkKHFoTVkngpzvyPuoQyqXrEnwCDvFrCNrWbVobKmY"
e1636481486400391649 = "qXNdmBOGGjkmMrNXEnIOxeSNAYjYKQvnZDIwSgMhfeMNJZfQvmFiBvRkTNlLVzeohfAnrJpBICjCZay"
R1636481486400461751 = "iANOiAlyIJBnnAhWyZaCIReQXtyNYrpoYbysWFkUOPltuKuNXSkORZHjHZMyHAXZwTdOOzSTbyaffSS"
H53 = "bMCzVLTEvEhNnTsmGgZaEhbHwRMNvBzqDPbpBGMTtoBLZHedLkiAlerCaGYmIrdaXCcNRRkJjpeTAhV"
r1636481486400734255 = "fHBgqmizUYuRRhTyYjLlRYZEloMoYReNJGxHWtJWFFTDTLKcLBkXiAhjFXyMOHMYtFDGfVLrLREhnoa"
vJHJUUpgdKDqGjGQJDZTjOjoCkuahtDyhDwdhFjOdycvxizhlbGvXSFEOeDgIQdKQUmfdaMVFsynPVW57 = "FfMENCAmOoaHLNcDYhGqHckjMwrNQuBIOixyewCTNWMkrRhBZzQtEedkqljhjeDfjTFpvOtnGLwpPfa"
llllllIIlIIIIIIlIlllIllIlIIIIIIlIlllIllIlIlIIllIllllIIIIllI = 510
i61 = "EhgcwBvgONtDSucPOfOyPgudsNpNLMLIlyvCnmZWOEyLRseDjFAZzfYlAJxoHGFuInFsuEZHVnsvYEc"
XFnSMUoEyUYRINFAIyxfiAwCGHmmsHnOMypkkOdAFiRuRcSZbTclsJJVEtfWEfhIzSjErheBuVWUERb63 = 710
aaAaaAaaaaaaAAaaAAaAAAaAAaaaaaaAAAAAaaaAaAaaAAAAAaaaaAaaaaAaaAaaA = 312
K163648148640144867 = 213
AaaaaAAaaaaaaaaAaaAAAaAAaaAaaAAaaAAaaAaAaaAAaaAaaaaAAAaaAAaAaAaaaAaaA = "cTuovTyCdqeVHMwXJeMSIqvwQKRJiWFLdiOvqiTnkpOHMGqyqEDmPKHZKlZxviDDxwVliAcLgndcQNj"
AAaaAaaAAAaaAaAaaAaaAaaAAAaAaAAaaaaaAaAAAAAAAaaAaaaAaAaAAaAaAAAaAaaaaaa = 417
U73 = "tKiQqTjwZzexmkesOIThEoDoFUCzftxDZpMkogzznjdisKRyFNSTjOHrrYYncjZLOZoVscgTSOqwBpC"
W1636481486402001675 = "ATFGpKidvCPDFEVGDNqwnoPXlHaRQdFzAgDuSbcjThmnhfcsMHjCmNBqcmghlqKhLPFNRrTIMcMFDOw"
OfBSOfiYImsNEYlqROSvKdnUguAYlchdCAzBhguxPFedZvHqUYYVRXoRtzHbQVHythdjzoyPfICaclx77 = "TDgwMzNYjhquOzvOUcEiJaFGgAfnaTPWLdtoVfkFdQrVGcxYpLbIGSmpSJlzEyETDwNyxoSKJIPJUoO"
AAAAaAaaaaaAAAaAAAaAaaaaAaAaaAAAaAaAAAAaAaaAaAAaAAAAaaAAAaaAaaAaaaAAAAaaaAaaAAA = "KkPMBpqhSaudxABatviPZMBMFJwJMMoqlCOgGYXQrnrQJgRmiHIBHWCfJbWDMBLXAkPFxDnGfFWANpS"
y163648148640240981 = 478
X83 = "VIuLEIMUuIAlsOMvKubtgxmkKwSPDmtdIxGmKpdnaeRDCMIfDIghRXOLJsXCnNqPqZcRQRFUvRoXidR"
aAaaAAaAaAAAAaAaaAAAaaAAAaaaaaAaaaAAaAaAAaaaAAAaaaAaaaaaaaAaAAaAaaaAaaAAaAaAaAaaaAaAa = "WTkMEUaWsTrWgyuKFUoJucqrDwCzolEHrNJiGdkvumGoXpkAnFKsHRRCzahVbEcHbNtNcqAIxsYWTgZ"
wtJQtRgBKpRwgagHhyExBcpDAqHovxNKSGoqBHqwtpCCQPvvHJiFzPofEsUiCvhMIfLoiDkgrVlChRl87 = 738
MbzFLVvHGrbjmGgDjUUFNaVGbGmYzZNwnAPhtyHnfXTPGWZsqtQVEluzKOFFFqUkdGrOPBaeJMncVZy89 = 286
WRkcMvHgAKAndEytgxbIbNyaCFniIMTrVtwElNViwMMvBJUVOiExlzJlwofhdovBFISoyuuJQUtWDhq91 = 733
W163648148640321893 = 408
yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy = 364
g1636481486403367897 = 707
x1636481486403498299 = "ZzXobivNDBzvJWqqNAtHlnznaKaYTfDEaLVUoXwqgrvvvenkUjewpYXGZMWzozTmjWgqyIyhMVvcMko"
lIlIIIIIllIllIIIlllllIIIIlIllIIllIlIlIIIlIIlIIIIIllIIIIIlllllIllllllllIllIIlllIlIIllIIIIIllIlIIIlIIlI = "SnMzSlJTcKQFiaGylmrfQIUUZiSFYzYeXkaedKXeRPxSiwcVEedIinaVYzGgeyuQHOxXQOWmzezSdEy"
o16364814864037552103 = "wyXYsfvyYvlqADMDNqsHtDyeOBQrtOvIqYIvjmxPTaahtaIBcPcyLYpSyaixPjqDPlfzdsMpgxdYFfG"
k105 = "EyHzRAZxOMaPdzTmOiSynZQlnRfYlswqxiqlFgWMPzryAOpMdWzaryhAXcYLnoalxEkELlveoehrgpn"
g16364814864039526107 = 728
jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = "AlzLRsGZlfqYFLjbDXeTdpAULeHYQnxFDKsqUNRPNLwKZERQxmrZkflUpINbFxxoqjTYtwOvqcBTdCV"
knQiPGMcFKiSqctuixsRWKQuDTNXQVrYpDVYXHcPWICjtHKCmdpMshWneNMJxDbeSrsRFvWtuFVqwmk111 = "yRLXBIxnVJtkrnpWzkUPUxBASxwGodhyjAQqhEshuDEujrRbYjheYlPoNjotKAUzwDIAijZbAkVwACd"
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv = 344
O115 = 179
OIZsCafsYKxIkCIwnQDGmtIwaLmxUqQjWQZCJvCSojpRvkcujFHCHyuouZIWvEiogHXROaIHmNdcAeU117 = "EPOJeAXFFbSGCzwMLhtmHeMDhDuuGXdUUmOsBzmYUuVhSDLLvgUekObAWMQrrCoqfWtZkHZmLjUNGqG"
AAAaAaaaaaAAaAAaAAaaAaaaAAaAaAaAaaAAAaaaaaaaAaaaaaaAaaAAaAAAaaAaaAaAAaaAaaAaAaAaaaaaaAAAAAAaaAAaAaaaaAaAAAAAaAAaaAaAaAa = 137
AAaaaaaAaaaAAAaAaaAaaAaaaAaAAaaAAAAAaAaAAAAaAAaaAaAAaAAAaAaaAaaaaaaaaaAAAaAaaAaAaAaaAaAAAAAaaAAaAaaaAaaaAAaAAaaaAaaAaaAaa = 525
k16364814864049761123 = "YFkyLhvgvmeuqvgieoSKrBszLVQHufFiVcUnukDHGXyQBnXvyptBhVfhHbFduPCLCAKYQHQKxSfbHgZ"
llIIllllIllIIllllIIIlIllIllllIIIllIlIllIIIIlIlIlIIIlllllIIIIIIIIlllIlllIlIIIIIIIlllllIIllIlIIlIlIlIIIIIIlIlllIllllIIIIIlIlIIl = "INwtmmLouoEEIcbMtViMEIlGWAYGBcVHlJwvSVkxyYybXezRIlNnShUKEvujJCOZAMvrAtvelnkPqEZ"
SSSSSSSSSSSSSSSSSSSS'
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
